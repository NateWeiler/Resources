* Abstract  

Expressing one's thoughts in the form of a logically structured
document is an effective means of organizing ideas and communicating
them effectively to the human reader; this essay expresses the art of
programming as a means of effectively communicating one's intention to
the machine.

In 2007, I wrote a [[http://emacspeak.sourceforge.net/raman/publications/bc-emacspeak/publish-emacspeak-bc.html][chapter on Emacspeak]] for the book
[[http://shop.oreilly.com/product/9780596510046.do][Beautiful Code
from OReilly]]. About a year later, I wrote an article called [[http://emacspeak.sourceforge.net/raman/publications/thinking-of-math/][Thinking
Of Mathematics]]. This article is being written over 10 years later as a
consolidated follow-up to the afore-mentioned publications. The goal
is to further crystalize some of the lessons learnt over the duration
of project Emacspeak, while stepping back to think more broadly about

the lessons learnt over 25 years of Software Engineering in the
context of eyes-free interaction.

* Emacspeak: High-Level Goals 

This section enumerates the high-level goals that motivated Emacspeak
at its inception.  These goals derived from my use of screen-readers
during my time as a graduate student at Cornell and the insights
gleened from developing [[http://emacspeak.sourceforge.net/raman/aster/aster-toplevel.html][Audio System For Technical Readings (AsTeR)]].
These goals have remained constant over the duration of the project, with
very few additional requirements  creeping in over time.

  1. Treat auditory  feedback as a first-class output modality.
  2. Audio formatted output consists of text-to-speech (TTS)  and 
     synchronized non-speech auditory icons.
  3. Use spatial audio to augment the user's ability to contextualize
     and consume multiple streams of information.
  4. Auditory feedback is context-sensitive and designed to reduce
     cognitive load on the listener while increasing the overall
     band-width of man-machine communication.
  5. Rich auditory feedback is generated by /audio formatting/
     structured information along with the surrounding context.
  6. Leverage all aspects of the auditory display to efficiently and
     effectively communicate information along with its underlying
     structure and semantics.
  7. As a follow-on to the above, all content being authored/browsed shall
     be accessible via a consistent UI that facilitates information
     interchange across different activities; e.g., email a code
     fragment; cut-and-paste a code fragment from an e-book to a
     source file.
  8. Speed of task-completion shall be the over-riding goal with
     response latency reduced to a minimum.
  9. Writing prose ↔ communicating with humans; Writing code ↔
     communicating with machines.  Design a user interface that treats
     these consistently.
  10. Editing and browsing content (prose and code)shall both use
      structure-based navigation using a consistent set of
      key-bindings.
  11. The auditory interface shall enable hierarchical views of all
      forms of content with the ability to expand and collapse
      different types of content.
  

* Leverage Structure To Create And Organize Information
  
* Developing Robust Software Over  Time 


* Avoiding The Least Common Denominator Effect 


* Defensive Coding To Maintain Long-Term Sanity 

* References 

  1. [[http://emacspeak.sourceforge.net/raman/publications/bc-emacspeak/publish-emacspeak-bc.html][chapter on Emacspeak]]  from Beautiful Code, OReilly
  2. [[http://emacspeak.sourceforge.net/raman/publications/thinking-of-math/][Thinking Of Mathematics]]
  3. [[https://www.johndcook.com/blog/2015/06/18/most-important-skill-in-software/][Organisational Skills When Developing Software]]


#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:t f:t inline:t num:t
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:t todo:t |:t
#+TITLE: Thinking Of Software Engineering: An Essay On Eyes-Free Computing 
#+DATE: <2017-01-03 Tue>
#+AUTHOR: T.V Raman
#+EMAIL: raman@google.com
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 26.0.50.1 (Org mode 9.0.3)
