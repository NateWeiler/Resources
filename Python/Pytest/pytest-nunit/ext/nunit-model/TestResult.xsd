<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
        <xs:documentation>This is document is descriptive, rather than a guarantee of future decisions.
        </xs:documentation>
    </xs:annotation>

    <xs:include schemaLocation="TestFilterDefinitions.xsd"/>

    <!-- NUnit.Framework.Internal.TestResult.AddToXml -->
    <xs:redefine schemaLocation="TestDefinitions.xsd">
        <xs:complexType name="TestCaseElementType">
            <xs:complexContent>
                <xs:extension base="TestCaseElementType">
                    <xs:group ref="TestResultBaseElementGroup"/>
                    <xs:attributeGroup ref="TestResultBaseAttributeGroup"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
        <xs:complexType name="TestSuiteElementType">
            <xs:complexContent>
                <xs:extension base="TestSuiteElementType">
                    <xs:sequence>
                        <xs:group ref="TestResultBaseElementGroup"/>
                        <xs:group ref="ContainedTestGroup" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                    <xs:attributeGroup ref="TestResultBaseAttributeGroup"/>
                    <xs:attribute name="total" type="NonnegativeInt32" use="required"/>
                    <xs:attribute name="passed" type="NonnegativeInt32" use="required"/>
                    <xs:attribute name="failed" type="NonnegativeInt32" use="required"/>
                    <xs:attribute name="warnings" type="NonnegativeInt32" use="required"/>
                    <xs:attribute name="inconclusive" type="NonnegativeInt32" use="required"/>
                    <xs:attribute name="skipped" type="NonnegativeInt32" use="required"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:redefine>
    <xs:group name="TestResultBaseElementGroup">
        <xs:sequence>
            <xs:group ref="RootResultElementGroup" minOccurs="0"/>
            <xs:group ref="TestBaseElementGroup"/>
            <!-- NUnit.Framework.Internal.TestResult.AddFailureElement -->
            <xs:element name="failure" minOccurs="0" type="FailureType" />

            <!-- NUnit.Framework.Internal.TestResult.AddReasonElement -->
            <xs:element name="reason" minOccurs="0" type="ReasonType" />

            <!-- NUnit.Framework.Internal.TestResult.AddOutputElement -->
            <xs:element name="output" minOccurs="0" type="xs:string"/>

            <!-- NUnit.Framework.Internal.TestResult.AddAssertionsElement -->
            <xs:element name="assertions" minOccurs="0" type="AssertionsType"/>

            <xs:element name="attachments" minOccurs="0" type="AttachmentsType" />
        </xs:sequence>
    </xs:group>
    <xs:attributeGroup name="TestResultBaseAttributeGroup">
        <xs:attribute name="result" use="required" type="TestStatusType"/>
        <xs:attribute name="label" type="xs:string"/>
        <xs:attribute name="site" type="FailureSiteType"/>
        <xs:attribute name="start-time" type="xs:string"/>
        <xs:attribute name="end-time" type="xs:string"/>
        <xs:attribute name="duration" type="TestDurationType"/>
        <xs:attribute name="asserts" type="NonnegativeInt32" use="required"/>
    </xs:attributeGroup>

    <!-- NUnit.Framework.Api.FrameworkController.RunTests -->
    <xs:group name="RootResultElementGroup">
        <xs:sequence>
            <!-- NUnit.Framework.Api.FrameworkController.InsertEnvironmentElement -->
            <xs:element name="environment" type="EnvironmentType"/>
            <!-- NUnit.Framework.Api.FrameworkController.InsertSettingsElement -->
            <xs:element name="settings" minOccurs="0" type="SettingsType" />
        </xs:sequence>
    </xs:group>

    <!-- NUnitLite.NUnit3XmlOutputWriter.WriteXmlResultOutput -->
    <!-- NUnitLite.NUnit3XmlOutputWriter.MakeTestRunElement -->
    <xs:element name="test-run" type="TestRunType">
        <xs:unique name="UniqueId">
            <xs:selector xpath=". | .//test-case | .//test-suite"/>
            <xs:field xpath="@id"/>
        </xs:unique>
    </xs:element>
    <xs:complexType name="SettingsType">
        <xs:sequence>
            <!-- NUnit.Framework.Api.FrameworkController.AddSetting -->
            <xs:element name="setting" minOccurs="0" maxOccurs="unbounded" type="SettingType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="KeyValuePairType">
        <xs:attribute name="key" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="SettingType">
        <xs:sequence>
            <!-- NUnit.Framework.Api.FrameworkController.AddDictionaryEntries -->
            <xs:element name="item" minOccurs="0" maxOccurs="unbounded" type="KeyValuePairType"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="EnvironmentType">
        <xs:attribute name="framework-version" type="xs:string" use="required"/>
        <xs:attribute name="clr-version" type="xs:string" use="required"/>
        <xs:attribute name="os-version" type="xs:string" use="required"/>
        <xs:attribute name="platform" type="xs:string"/>
        <xs:attribute name="cwd" type="xs:string" use="required"/>
        <xs:attribute name="machine-name" type="xs:string"/>
        <xs:attribute name="user" type="xs:string"/>
        <xs:attribute name="user-domain" type="xs:string"/>
        <xs:attribute name="culture" type="xs:string" use="required"/>
        <xs:attribute name="uiculture" type="xs:string" use="required"/>
        <xs:attribute name="os-architecture" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="TestRunType">
        <xs:sequence>
            <!-- NUnitLite.NUnit3XmlOutputWriter.MakeCommandLineElement -->
            <xs:element name="command-line" minOccurs="0" type="xs:string"/>
            <!-- NUnitLite.NUnit3XmlOutputWriter.MakeTestFilterElement -->
            <xs:element name="filter" type="TestFilterType"/>
            <xs:group ref="ContainedTestGroup" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="testcasecount" type="NonnegativeInt32" use="required"/>
        <xs:attribute name="result" use="required" type="TestResultType"/>
        <xs:attribute name="start-time" type="xs:string"/>
        <xs:attribute name="end-time" type="xs:string"/>
        <xs:attribute name="duration" type="TestDurationType"/>
        <xs:attribute name="total" type="NonnegativeInt32" use="required"/>
        <xs:attribute name="passed" type="NonnegativeInt32" use="required"/>
        <xs:attribute name="failed" type="NonnegativeInt32" use="required"/>
        <xs:attribute name="inconclusive" type="NonnegativeInt32" use="required"/>
        <xs:attribute name="skipped" type="NonnegativeInt32" use="required"/>
        <xs:attribute name="asserts" type="NonnegativeInt32" use="required"/>
        <xs:attribute name="clr-version" type="xs:string"/>
        <xs:attribute name="engine-version" type="xs:string"/>
    </xs:complexType>
    <xs:simpleType name="TestDurationType">
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TestResultType">
        <!-- NUnit.Framework.Interfaces.TestStatus -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="Inconclusive"/>
            <xs:enumeration value="Skipped"/>
            <xs:enumeration value="Passed"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Failed"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FailureSiteType">
        <!-- NUnit.Framework.Interfaces.FailureSite -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="SetUp"/>
            <xs:enumeration value="TearDown"/>
            <xs:enumeration value="Parent"/>
            <xs:enumeration value="Child"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="TestStatusType">
        <!-- NUnit.Framework.Interfaces.TestStatus -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="Inconclusive"/>
            <xs:enumeration value="Skipped"/>
            <xs:enumeration value="Passed"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Failed"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="AssertionStatusType">
        <!-- NUnit.Framework.Interfaces.AssertionStatus -->
        <xs:restriction base="xs:string">
            <xs:enumeration value="Inconclusive"/>
            <xs:enumeration value="Passed"/>
            <xs:enumeration value="Warning"/>
            <xs:enumeration value="Failed"/>
            <xs:enumeration value="Error"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ReasonType">
        <xs:all>
            <xs:element name="message" type="xs:string"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="AssertionType">
        <xs:all>
            <xs:element name="message" minOccurs="0" type="xs:string"/>
            <xs:element name="stack-trace" minOccurs="0" type="xs:string"/>
        </xs:all>
        <xs:attribute name="result" type="AssertionStatusType"/>
    </xs:complexType>
    <xs:complexType name="AttachmentType">
        <xs:all>
            <xs:element name="filePath" type="xs:string"/>
            <xs:element name="description" minOccurs="0" type="xs:string"/>
        </xs:all>
    </xs:complexType>
    <xs:complexType name="AttachmentsType">
        <xs:sequence>
            <xs:element name="attachment" maxOccurs="unbounded" type="AttachmentType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="AssertionsType">
        <xs:sequence>
            <xs:element name="assertion" maxOccurs="unbounded" type="AssertionType"/>
            <!-- NUnit.Framework.Internal.TestResult.AddAttachmentsElement -->
            
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="FailureType">
        <xs:all>
            <xs:element name="message" minOccurs="0" type="xs:string"/>
            <xs:element name="stack-trace" minOccurs="0" type="xs:string"/>
        </xs:all>
    </xs:complexType>
</xs:schema>