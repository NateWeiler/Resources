# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2020, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Georg Brandl <g.brandl@gmx.net>, 2018
# cdarlint <cdarling@126.com>, 2018
# wendi cao <651645601@qq.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 4.0.0+/d9280e253\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-13 23:32+0000\n"
"PO-Revision-Date: 2018-06-26 15:59+0000\n"
"Last-Translator: wendi cao <651645601@qq.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:2
msgid ""
":mod:`sphinx.ext.napoleon` -- Support for NumPy and Google style docstrings"
msgstr "：模式：`sphinx.ext.napoleon`——支持NumPy和Google风格的文档字符串"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:12
msgid "Overview"
msgstr "概述"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:16
msgid "Are you tired of writing docstrings that look like this::"
msgstr "你厌倦了写这样的文档字符串:："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:28
msgid ""
"`reStructuredText`_ is great, but it creates visually dense, hard to read "
"`docstrings`_. Compare the jumble above to the same thing rewritten "
"according to the `Google Python Style Guide`_::"
msgstr ""
"`recostructedText``很好，但它创建了视觉上密集、难以阅读的“docstrings`”。将上面的混乱与根据“googlepython风格指南”重写的内容进行比较："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:41
msgid "Much more legible, no?"
msgstr "更清晰，不是吗？"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:43
msgid ""
"Napoleon is a :term:`extension` that enables Sphinx to parse both `NumPy`_ "
"and `Google`_ style docstrings - the style recommended by `Khan Academy`_."
msgstr ""
"Napoleon是一个：term:‘extension’，它使Sphinx能够解析“NumPy”和“Google”风格的docstrings，这是“Khan"
" Academy”推荐的样式。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:46
msgid ""
"Napoleon is a pre-processor that parses `NumPy`_ and `Google`_ style "
"docstrings and converts them to reStructuredText before Sphinx attempts to "
"parse them. This happens in an intermediate step while Sphinx is processing "
"the documentation, so it doesn't modify any of the docstrings in your actual"
" source code files."
msgstr ""
"Napoleon是一个预处理器，它可以解析“NumPy”和“Google”风格的docstring，并在Sphinx尝试解析它们之前将它们转换为reStructuredText。这发生在Sphinx处理文档的中间步骤中，因此它不会修改实际源代码文件中的任何文档字符串。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:64
msgid "Getting Started"
msgstr "快速上手"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:66
msgid ""
"After :doc:`setting up Sphinx </usage/quickstart>` to build your docs, "
"enable napoleon in the Sphinx `conf.py` file::"
msgstr "之后：文档：`setting up Sphinx 1 `要建立你的文档，请在Sphinx中启用拿破仑`conf.py`文件：："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:74
msgid "Use `sphinx-apidoc` to build your API documentation::"
msgstr "使用“sphinx apidoc”构建API文档："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:80
msgid "Docstrings"
msgstr "文档字符串"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:82
msgid ""
"Napoleon interprets every docstring that :mod:`autodoc <sphinx.ext.autodoc>`"
" can find, including docstrings on: ``modules``, ``classes``, "
"``attributes``, ``methods``, ``functions``, and ``variables``. Inside each "
"docstring, specially formatted `Sections`_ are parsed and converted to "
"reStructuredText."
msgstr ""
"拿破仑解释每个文档字符串: mod:`autodoc<sphinx.ext.autodoc>`可以找到，包括文档字符串: "
"`modules``、`classes```、`attributes`、``methods```、`functions``和`variables``。在每个文档字符串中，经过特殊格式化的“Sections”被解析并转换为restructedText。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:88
msgid "All standard reStructuredText formatting still works as expected."
msgstr "所有标准的RestructedText格式仍按预期工作。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:94
msgid "Docstring Sections"
msgstr "文档字符串部分"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:96
msgid "All of the following section headers are supported:"
msgstr "支持以下所有节标题："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:98
msgid "``Args`` *(alias of Parameters)*"
msgstr "``Args`` *(alias of Parameters)*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:99
msgid "``Arguments`` *(alias of Parameters)*"
msgstr "``Arguments`` *(参数别名)*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:100
msgid "``Attention``"
msgstr "``注意``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:101
msgid "``Attributes``"
msgstr "``属性``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:102
msgid "``Caution``"
msgstr "``小心``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:103
msgid "``Danger``"
msgstr "``危险``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:104
msgid "``Error``"
msgstr "``错误``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:105
msgid "``Example``"
msgstr "``示例``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:106
msgid "``Examples``"
msgstr "``示例``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:107
msgid "``Hint``"
msgstr "``提示``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:108
msgid "``Important``"
msgstr "``重要``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:109
msgid "``Keyword Args`` *(alias of Keyword Arguments)*"
msgstr "``Keyword Args`` *(参数别名)*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:110
msgid "``Keyword Arguments``"
msgstr "``关键字参数``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:111
msgid "``Methods``"
msgstr "``方法``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:112
msgid "``Note``"
msgstr "``笔记``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:113
msgid "``Notes``"
msgstr "``笔记``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:114
msgid "``Other Parameters``"
msgstr "``其他参数``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:115
msgid "``Parameters``"
msgstr "``参数``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:116
msgid "``Return`` *(alias of Returns)*"
msgstr "``返回`` *(返回别名)*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:117
msgid "``Returns``"
msgstr "``返回``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:118
msgid "``Raise`` *(alias of Raises)*"
msgstr "``Raise`` *(Raise别名)*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:119
msgid "``Raises``"
msgstr "``提升``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:120
msgid "``References``"
msgstr "``参考``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:121
msgid "``See Also``"
msgstr "``请参阅``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:122
msgid "``Tip``"
msgstr "``贴士``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:123
msgid "``Todo``"
msgstr "``待办``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:124
msgid "``Warning``"
msgstr "``警告``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:125
msgid "``Warnings`` *(alias of Warning)*"
msgstr "``警告`` *(警告别名)*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:126
msgid "``Warn`` *(alias of Warns)*"
msgstr "``Warn`` *(Warns别名)*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:127
msgid "``Warns``"
msgstr "``警告``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:128
msgid "``Yield`` *(alias of Yields)*"
msgstr "``产量``*（产量别名）*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:129
msgid "``Yields``"
msgstr "``产量``"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:132
msgid "Google vs NumPy"
msgstr "Google 和 NumPy"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:134
msgid ""
"Napoleon supports two styles of docstrings: `Google`_ and `NumPy`_. The main"
" difference between the two styles is that Google uses indentation to "
"separate sections, whereas NumPy uses underlines."
msgstr ""
"Napoleon支持两种docstring样式：“Google”和“NumPy”。这两种风格的主要区别在于Google使用缩进来分隔部分，而NumPy使用下划线。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:138
msgid "Google style:"
msgstr "谷歌的样式："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:157
msgid "NumPy style:"
msgstr "NumPy的样式："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:181
msgid ""
"NumPy style tends to require more vertical space, whereas Google style tends"
" to use more horizontal space. Google style tends to be easier to read for "
"short and simple docstrings, whereas NumPy style tends be easier to read for"
" long and in-depth docstrings."
msgstr ""
"NumPy风格倾向于需要更多的垂直空间，而Google风格倾向于使用更多的水平空间。对于简短的docstring，Google样式更容易阅读，而NumPy样式对于长而深入的docstring更容易阅读。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:186
msgid "The `Khan Academy`_ recommends using Google style."
msgstr "“可汗学院”推荐使用谷歌风格。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:188
msgid ""
"The choice between styles is largely aesthetic, but the two styles should "
"not be mixed. Choose one style for your project and be consistent with it."
msgstr "风格之间的选择很大程度上是审美的，但这两种风格不应该混为一谈。为你的项目选择一种风格，并与之保持一致。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:193
msgid "For complete examples:"
msgstr "完整示例："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:195
msgid ":ref:`example_google`"
msgstr ":ref:`example_google`"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:196
msgid ":ref:`example_numpy`"
msgstr ":ref:`example_numpy`"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:200
msgid "Type Annotations"
msgstr "类型批注"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:202
msgid ""
"`PEP 484`_ introduced a standard way to express types in Python code. This "
"is an alternative to expressing types directly in docstrings. One benefit of"
" expressing types according to `PEP 484`_ is that type checkers and IDEs can"
" take advantage of them for static code analysis. `PEP 484`_ was then "
"extended by `PEP 526`_ which introduced a similar way to annotate variables "
"(and attributes)."
msgstr ""

#: ../../sphinx/doc/usage/extensions/napoleon.rst:209
msgid "Google style with Python 3 type annotations::"
msgstr "带有python3类型注释的Google样式："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:239
msgid "Google style with types in docstrings::"
msgstr "docstrings中类型的Google样式："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:267
msgid ""
"`Python 2/3 compatible annotations`_ aren't currently supported by Sphinx "
"and won't show up in the docs."
msgstr "`Sphinx目前不支持Python2/3兼容的注释，因此不会出现在文档中。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:281
msgid "Configuration"
msgstr "配置"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:283
msgid ""
"Listed below are all the settings used by napoleon and their default values."
" These settings can be changed in the Sphinx `conf.py` file. Make sure that "
"\"sphinx.ext.napoleon\" is enabled in `conf.py`::"
msgstr ""
"下面列出了拿破仑使用的所有设置及其默认值。这些设置可以在sphinx中更改`conf.py`文件。确保“sphinx.ext.napoleon“在中启用`conf.py`::"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:314
msgid ""
"True to parse `Google style`_ docstrings. False to disable support for "
"Google style docstrings. *Defaults to True.*"
msgstr ""
"若要分析“Google style”docstrings，则为True。False禁用对Google样式docstring的支持。*默认为True*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:319
msgid ""
"True to parse `NumPy style`_ docstrings. False to disable support for NumPy "
"style docstrings. *Defaults to True.*"
msgstr ""
"若要分析“NumPy-style”docstrings，则为True。False禁用对NumPy样式docstring的支持。*默认为True*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:324
msgid ""
"True to list ``__init___`` docstrings separately from the class docstring. "
"False to fall back to Sphinx's default behavior, which considers the "
"``__init___`` docstring as part of the class documentation. *Defaults to "
"False.*"
msgstr ""
"如果为True，则从类docstring中分别列出“``uUu "
"init_Uu2;`docstring”。False返回到Sphinx的默认行为，该行为将“``uUu "
"init_Uu2;”docstring视为类文档的一部分。*默认为False*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:329
#: ../../sphinx/doc/usage/extensions/napoleon.rst:345
#: ../../sphinx/doc/usage/extensions/napoleon.rst:363
#: ../../sphinx/doc/usage/extensions/napoleon.rst:388
#: ../../sphinx/doc/usage/extensions/napoleon.rst:434
#: ../../sphinx/doc/usage/extensions/napoleon.rst:462
#: ../../sphinx/doc/usage/extensions/napoleon.rst:504
msgid "**If True**::"
msgstr "**如果为真**::"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:341
msgid ""
"True to include private members (like ``_membername``) with docstrings in "
"the documentation. False to fall back to Sphinx's default behavior. "
"*Defaults to False.*"
msgstr ""
"如果为True，则在文档中使用docstrings包含私有成员（如“`u "
"membername```”）。False返回到Sphinx的默认行为。*默认为False*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:359
msgid ""
"True to include special members (like ``__membername__``) with docstrings in"
" the documentation. False to fall back to Sphinx's default behavior. "
"*Defaults to True.*"
msgstr ""
"如果为True，则在文档中包含带有DocString的特殊成员（如“``uUu "
"membername````”）的值。False返回到Sphinx的默认行为。*默认为True*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:377
msgid ""
"True to use the ``.. admonition::`` directive for the **Example** and "
"**Examples** sections. False to use the ``.. rubric::`` directive instead. "
"One may look better than the other depending on what HTML theme is used. "
"*Defaults to False.*"
msgstr ""
"如果要使用''. "
"admonition::：``用于**示例**和**示例**部分的指令。使用`..改为：``指令。一个可能比另一个更好，这取决于使用了什么HTML主题。*默认为False*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:382
#: ../../sphinx/doc/usage/extensions/napoleon.rst:427
#: ../../sphinx/doc/usage/extensions/napoleon.rst:453
#: ../../sphinx/doc/usage/extensions/napoleon.rst:497
msgid "This `NumPy style`_ snippet will be converted as follows::"
msgstr "此“NumPy-style”代码段将按如下方式转换："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:394
#: ../../sphinx/doc/usage/extensions/napoleon.rst:439
#: ../../sphinx/doc/usage/extensions/napoleon.rst:469
#: ../../sphinx/doc/usage/extensions/napoleon.rst:509
msgid "**If False**::"
msgstr "**如果为假**::"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:402
msgid ""
"True to use the ``.. admonition::`` directive for **Notes** sections. False "
"to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr "如果要使用''.. admonition:：``针对**注释**部分的指令。使用`..改为：``指令。*默认为False*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:405
msgid ""
"The singular **Note** section will always be converted to a ``.. note::`` "
"directive."
msgstr "单数的**注释**部分将始终转换为`..注意：``指令。"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:410
#: ../../sphinx/doc/usage/extensions/napoleon.rst:420
msgid ":attr:`napoleon_use_admonition_for_examples`"
msgstr "：attr:`napoleon\\u使用“警告”作为示例`"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:414
msgid ""
"True to use the ``.. admonition::`` directive for **References** sections. "
"False to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr "如果要使用''..警告：``针对**引用**部分的指令。使用`..改为：``指令。*默认为False*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:424
msgid ""
"True to use the ``:ivar:`` role for instance variables. False to use the "
"``.. attribute::`` directive instead. *Defaults to False.*"
msgstr "如果为True，则将“%ivar:`”角色用于实例变量。使用`。。改为属性：：``指令。*默认为False*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:449
msgid ""
"True to use a ``:param:`` role for each function parameter. False to use a "
"single ``:parameters:`` role for all the parameters. *Defaults to True.*"
msgstr ""
"如果为True，则为每个函数参数使用一个“`:param:`”角色。如果要对所有参数使用单个“参数：`”角色，则返回False。*默认为True*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:478
msgid ""
"True to use a ``:keyword:`` role for each function keyword argument. False "
"to use a single ``:keyword arguments:`` role for all the keywords. *Defaults"
" to True.*"
msgstr ""
"如果为True，则为每个函数关键字参数使用一个“`:keyword:`”角色。如果要对所有关键字使用单个“`:keyword参数：``角色”，则返回False。*默认为True*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:483
msgid ""
"This behaves similarly to  :attr:`napoleon_use_param`. Note unlike docutils,"
" ``:keyword:`` and ``:param:`` will not be treated the same way - there will"
" be a separate \"Keyword Arguments\" section, rendered in the same fashion "
"as \"Parameters\" section (type links created if possible)"
msgstr ""
"其行为类似于：attr:`napoleon_use_param`。注意与docutils不同的是，`：keyword:``和`:param"
":``的处理方式不同-将有一个单独的“keyword "
"Arguments”部分，以与“Parameters”部分相同的方式呈现（如果可能，请创建类型链接）"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:490
msgid ":attr:`napoleon_use_param`"
msgstr ":attr:`napoleon_use_param`"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:494
msgid ""
"True to use the ``:rtype:`` role for the return type. False to output the "
"return type inline with the description. *Defaults to True.*"
msgstr "如果为True，则对返回类型使用“`:rtype:`”角色。False以输出与描述内联的返回类型。*默认为True*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:515
msgid ""
"A mapping to translate type names to other names or references. Works only "
"when ``napoleon_use_param = True``. *Defaults to None.*"
msgstr "将类型名转换为其他名称或引用的映射。只有在“napoleon\\u use_param=True”时才有效。*默认为“无”*"

#: ../../sphinx/doc/usage/extensions/napoleon.rst:518
msgid "With::"
msgstr "和：："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:525
msgid "This `NumPy style`_ snippet::"
msgstr "此“NumPy样式”片段："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:534
msgid "becomes::"
msgstr "变为：："

#: ../../sphinx/doc/usage/extensions/napoleon.rst:545
msgid ""
"True to allow using `PEP 526`_ attributes annotations in classes. If an "
"attribute is documented in the docstring without a type and has an "
"annotation in the class body, that type is used."
msgstr ""
