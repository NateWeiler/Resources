# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2020, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# wendi cao <651645601@qq.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 4.0.0+/d9280e253\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-13 23:32+0000\n"
"PO-Revision-Date: 2018-02-12 13:48+0000\n"
"Last-Translator: wendi cao <651645601@qq.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/extdev/parserapi.rst:4
msgid "Parser API"
msgstr "解析器接口"

#: ../../sphinx/doc/extdev/parserapi.rst:6
msgid "`The docutils documentation describes`__ parsers as follows:"
msgstr "`docutils文档对“解析器”的描述如下："

#: ../../sphinx/doc/extdev/parserapi.rst:8
msgid ""
"The Parser analyzes the input document and creates a node tree "
"representation."
msgstr "解析器分析输入文档并创建节点树表示。"

#: ../../sphinx/doc/extdev/parserapi.rst:13
msgid ""
"In Sphinx, the parser modules works as same as docutils.  The parsers are "
"registered to Sphinx by extensions using Application APIs; "
":meth:`.Sphinx.add_source_suffix()` and :meth:`.Sphinx.add_source_parser()`."
msgstr ""
"在Sphinx中，解析器模块的工作原理与docutils相同。解析器通过使用应用接口的扩展注册到Sphinx；：meth:`。Sphinx.add_source_suffix()`and:meth:`。Sphinx.add_source_parser()`."

#: ../../sphinx/doc/extdev/parserapi.rst:17
msgid ""
"The *source suffix* is a mapping from file suffix to file type.  For "
"example, ``.rst`` file is mapped to ``'restructuredtext'`` type.  Sphinx "
"uses the file type to looking for parsers from registered list.  On "
"searching, Sphinx refers to the ``Parser.supported`` attribute and picks up "
"a parser which contains the file type in the attribute."
msgstr ""
"*源后缀*是从文件后缀到文件类型的映射。例如，`.rst``文件映射到`'RestructedText``类型。Sphinx使用文件类型从已注册的列表中查找解析器。在搜索时，斯芬克斯指的是``解析器。支持``属性并获取包含属性中文件类型的解析器。"

#: ../../sphinx/doc/extdev/parserapi.rst:23
msgid ""
"The users can override the source suffix mappings using "
":confval:`source_suffix` like following::"
msgstr "用户可以使用：confval:`source_suffix`重写源后缀映射，如下所示："

#: ../../sphinx/doc/extdev/parserapi.rst:32
msgid ""
"You should indicate file types your parser supports. This will allow users "
"to configure their settings appropriately."
msgstr "您应该指出解析器支持的文件类型。这将允许用户适当地配置他们的设置。"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:1
msgid ""
"A base class of source parsers.  The additional parsers should inherit this "
"class instead of ``docutils.parsers.Parser``.  Compared with "
"``docutils.parsers.Parser``, this class improves accessibility to Sphinx "
"APIs."
msgstr ""
"源解析程序的基类。其他解析器应该继承这个类，而不是``docutils.parsers.Parser``. "
"与``docutils.parsers.Parser``，该类改进了Sphinx API的可访问性。"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:5
msgid "The subclasses can access following objects and functions:"
msgstr "子类可以访问以下对象和函数："

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:7
msgid "self.app"
msgstr "self.app"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:8
msgid "The application object (:class:`sphinx.application.Sphinx`)"
msgstr "应用程序对象（：class:`sphinx.application.sphinx`)"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:9
msgid "self.config"
msgstr "self.config"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:10
msgid "The config object (:class:`sphinx.config.Config`)"
msgstr "配置对象（：class:`sphinx.config.config`)"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:11
msgid "self.env"
msgstr "self.env"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:12
msgid "The environment object (:class:`sphinx.environment.BuildEnvironment`)"
msgstr "环境对象（：class:`sphinx.environment.BuildEnvironment`)"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:13
msgid "self.warn()"
msgstr "self.warn()"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:14
msgid "Emit a warning. (Same as :meth:`sphinx.application.Sphinx.warn()`)"
msgstr "发出警告。（同：meth:`sphinx.application.Sphinx.warn()``）"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:16
msgid "self.info()"
msgstr "self.info()"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:16
msgid ""
"Emit a informational message. (Same as "
":meth:`sphinx.application.Sphinx.info()`)"
msgstr "发出信息性消息。（同：meth:`sphinx.application.sphinx.info（）`）"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:18
msgid ""
"``warn()`` and ``info()`` is deprecated.  Use :mod:`sphinx.util.logging` "
"instead."
msgstr "``warn（）``和`info（）``已弃用。使用：mod:`sphinx.util.logging`代替。"

#: ../../sphinx/sphinx/parsers.pydocstring of sphinx.parsers.Parser:20
msgid "parser.app is deprecated."
msgstr "parser.app已弃用。"
