# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2020, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# wendi cao <651645601@qq.com>, 2020
# Georg Brandl <g.brandl@gmx.net>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 4.0.0+/d9280e253\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-13 23:32+0000\n"
"PO-Revision-Date: 2018-04-08 15:19+0000\n"
"Last-Translator: Georg Brandl <g.brandl@gmx.net>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/sphinx-doc/teams/15434/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/extdev/utils.rst:2
msgid "Utilities"
msgstr "公用程序"

#: ../../sphinx/doc/extdev/utils.rst:4
msgid "Sphinx provides utility classes and functions to develop extensions."
msgstr "Sphinx提供实用程序类和函数来开发插件。"

#: ../../sphinx/doc/extdev/utils.rst:7
msgid "Base classes for components"
msgstr "组件的基类"

#: ../../sphinx/doc/extdev/utils.rst:9
msgid ""
"These base classes are useful to allow your extensions to obtain Sphinx "
"components (e.g. :class:`.Config`, :class:`.BuildEnvironment` and so on) "
"easily."
msgstr ""
"这些基类有助于插件轻松获取Sphinx组件（例如：class:`.Config`，：class:`.BuildEnvironment`等等）。"

#: ../../sphinx/doc/extdev/utils.rst:12
msgid ""
"The subclasses of them might not work with bare docutils because they are "
"strongly coupled with Sphinx."
msgstr "它们的子类可能无法与裸docutil一起工作，因为它们与Sphinx强耦合。"

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform:1
msgid "A base class of Transforms."
msgstr "变换的基类。"

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform:3
msgid ""
"Compared with ``docutils.transforms.Transform``, this class improves "
"accessibility to Sphinx APIs."
msgstr "与``docutils.transforms.Transform``相比，该类改进了Sphinx接口的可访问性。"

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform.app:1
msgid "Reference to the :class:`.Sphinx` object."
msgstr "对：class:`.Sphinx`对象的引用。"

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform.config:1
#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective.config:1
#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.config:1
msgid "Reference to the :class:`.Config` object."
msgstr "对：class:`.Config`对象的引用。"

#: ../../sphinx/sphinx/transforms/__init__.pydocstring of
#: sphinx.transforms.SphinxTransform.env:1
#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective.env:1
#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.env:1
msgid "Reference to the :class:`.BuildEnvironment` object."
msgstr "对：类：`.BuildEnvironment`对象的引用。"

#: ../../sphinx/sphinx/transforms/post_transforms/__init__.pydocstring of
#: sphinx.transforms.post_transforms.SphinxPostTransform:1
msgid "A base class of post-transforms."
msgstr "后转换的基类。"

#: ../../sphinx/sphinx/transforms/post_transforms/__init__.pydocstring of
#: sphinx.transforms.post_transforms.SphinxPostTransform:3
msgid ""
"Post transforms are invoked to modify the document to restructure it for "
"outputting. They do resolving references, convert images, special "
"transformation for each output formats and so on.  This class helps to "
"implement these post transforms."
msgstr "调用后转换来修改文档，以重新构造文档以进行输出。它们负责解析引用、转换图像、为每种输出格式进行特殊转换等等。这个类帮助实现这些后转换。"

#: ../../sphinx/sphinx/transforms/post_transforms/__init__.pydocstring of
#: sphinx.transforms.post_transforms.SphinxPostTransform.apply:1
msgid "Override to apply the transform to the document tree."
msgstr "重写以将转换应用于文档树。"

#: ../../sphinx/sphinx/transforms/post_transforms/__init__.pydocstring of
#: sphinx.transforms.post_transforms.SphinxPostTransform.is_supported:1
msgid "Check this transform working for current builder."
msgstr "检查此转换是否适用于当前生成器。"

#: ../../sphinx/sphinx/transforms/post_transforms/__init__.pydocstring of
#: sphinx.transforms.post_transforms.SphinxPostTransform.run:1
msgid "main method of post transforms."
msgstr "后变换的主要方法。"

#: ../../sphinx/sphinx/transforms/post_transforms/__init__.pydocstring of
#: sphinx.transforms.post_transforms.SphinxPostTransform.run:3
msgid "Subclasses should override this method instead of ``apply()``."
msgstr "子类应该重写此方法，而不是“apply（）”。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective:1
msgid "A base class for Sphinx directives."
msgstr "Sphinx指令的基类。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective:3
msgid "This class provides helper methods for Sphinx directives."
msgstr "这个类为Sphinx指令提供了助手方法。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective:5
#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole:5
msgid ""
"The subclasses of this class might not work with docutils. This class is "
"strongly coupled with Sphinx."
msgstr "此类的子类可能无法与docutils一起使用。这个类与Sphinx紧密耦合。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective.get_source_info:1
msgid "Get source and line number."
msgstr "获取源和行号。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxDirective.set_source_info:1
msgid "Set source and line number to the node."
msgstr "为节点设置源和行号。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole:1
msgid "A base class for Sphinx roles."
msgstr "sphinx角色的基类。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole:3
msgid "This class provides helper methods for Sphinx roles."
msgstr "此类为Sphinx角色提供帮助程序方法。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.content:1
msgid "A list of strings, the directive content for customization"
msgstr "字符串列表，用于自定义的指令内容"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.inliner:1
msgid "The ``docutils.parsers.rst.states.Inliner`` object."
msgstr "在``docutils.parsers.rst.状态。内联线``对象。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.lineno:1
msgid "The line number where the interpreted text begins."
msgstr "解释文本开始的行号。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.name:1
msgid "The role name actually used in the document."
msgstr "文档中实际使用的角色名称。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.options:1
msgid "A dictionary of directive options for customization"
msgstr "自定义指令选项词典"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.rawtext:1
msgid "A string containing the entire interpreted text input."
msgstr "包含整个解释文本输入的字符串。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.SphinxRole.text:1
msgid "The interpreted text content."
msgstr "解释文本内容。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.ReferenceRole:1
msgid "A base class for reference roles."
msgstr "引用角色的基类。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.ReferenceRole:3
msgid ""
"The reference roles can accpet ``link title <target>`` style as a text for "
"the role.  The parsed result; link title and target will be stored to "
"``self.title`` and ``self.target``."
msgstr ""
"引用角色可以接受“链接标题”样式作为角色的文本。解析后的结果；链接标题和目标将存储到``self.title``以及``self.target``."

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.ReferenceRole.disabled:1
msgid "A boolean indicates the reference is disabled."
msgstr "布尔值表示引用被禁用。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.ReferenceRole.has_explicit_title:1
msgid "A boolean indicates the role has explicit title or not."
msgstr "布尔值表示角色是否具有显式标题。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.ReferenceRole.target:1
msgid "The link target for the interpreted text."
msgstr "解释文本的链接目标。"

#: ../../sphinx/sphinx/util/docutils.pydocstring of
#: sphinx.util.docutils.ReferenceRole.title:1
msgid "The link title for the interpreted text."
msgstr "解释文本的链接标题。"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:1
msgid "A base class for image converters."
msgstr "图像转换器的基类。"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:3
msgid ""
"An image converter is kind of Docutils transform module.  It is used to "
"convert image files which does not supported by builder to appropriate "
"format for that builder."
msgstr "图像转换器是一种Docutils变换模块。它用于将生成器不支持的图像文件转换为适合该生成器的格式。"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:7
msgid ""
"For example, :py:class:`LaTeX builder <.LaTeXBuilder>` supports PDF, PNG and"
" JPEG as image formats.  However it does not support SVG images. For such "
"case, to use image converters allows to embed these unsupported images into "
"the document.  One of image converters; :ref:`sphinx.ext.imgconverter "
"<sphinx.ext.imgconverter>` can convert a SVG image to PNG format using "
"Imagemagick internally."
msgstr ""
"例如，：py:class:`LaTeX "
"builder<.LaTeXBuilder>`支持PDF、PNG和JPEG作为图像格式。但是它不支持SVG图像。对于这种情况，使用图像转换器可以将这些不受支持的图像嵌入到文档中。图像转换器之一；：ref:`sphinx.ext.imgconverter"
" <sphinx.ext.imgconverter`可以在内部使用Imagemagick将SVG图像转换为PNG格式。"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:14
msgid "There are three steps to make your custom image converter:"
msgstr "制作自定义图像转换器有三个步骤："

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:16
msgid "Make a subclass of ``ImageConverter`` class"
msgstr "生成“ImageConverter”类的子类"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:17
msgid "Override ``conversion_rules``, ``is_available()`` and ``convert()``"
msgstr "重写“转换规则”、“is_available（）”和“convert（）``"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter:18
msgid ""
"Register your image converter to Sphinx using "
":py:meth:`.Sphinx.add_post_transform`"
msgstr "使用：py:meth:`将图像转换器注册到Sphinx。Sphinx.add_post_转换`"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.convert:1
msgid "Convert a image file to expected format."
msgstr "将图像文件转换为预期格式。"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.convert:3
msgid ""
"*_from* is a path for source image file, and *_to* is a path for destination"
" file."
msgstr "*_from*是源映像文件的路径，*\\u to*是目标文件的路径。"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.is_available:1
msgid "Return the image converter is available or not."
msgstr "返回图像转换器是否可用。"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.available:1
msgid ""
"The converter is available or not.  Will be filled at the first call of the "
"build.  The result is shared in the same process."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.available:4
msgid "Todo"
msgstr "待处理"

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.available:4
msgid ""
"This should be refactored not to store the state without class variable."
msgstr ""

#: ../../sphinx/sphinx/transforms/post_transforms/images.pydocstring of
#: sphinx.transforms.post_transforms.images.ImageConverter.conversion_rules:1
msgid ""
"A conversion rules the image converter supports. It is represented as a list"
" of pair of source image format (mimetype) and destination one::"
msgstr "图像转换器支持的转换规则。它表示为源图像格式（mimetype）和目标图像格式对的列表："

#: ../../sphinx/doc/extdev/utils.rst:34
msgid "Utility components"
msgstr "公用程序组件"

#: ../../sphinx/sphinx/events.pydocstring of sphinx.events.EventManager:1
msgid "Event manager for Sphinx."
msgstr "Sphinx的活动管理器"

#: ../../sphinx/sphinx/events.pydocstring of sphinx.events.EventManager.add:1
msgid "Register a custom Sphinx event."
msgstr "注册自定义Sphinx事件。"

#: ../../sphinx/sphinx/events.pydocstring of
#: sphinx.events.EventManager.connect:1
msgid "Connect a handler to specific event."
msgstr "将处理程序连接到特定事件。"

#: ../../sphinx/sphinx/events.pydocstring of
#: sphinx.events.EventManager.disconnect:1
msgid "Disconnect a handler."
msgstr "断开处理程序。"

#: ../../sphinx/sphinx/events.pydocstring of sphinx.events.EventManager.emit:1
msgid "Emit a Sphinx event."
msgstr "发射Sphinx事件。"

#: ../../sphinx/sphinx/events.pydocstring of
#: sphinx.events.EventManager.emit_firstresult:1
msgid "Emit a Sphinx event and returns first result."
msgstr "发出Sphinx事件并返回第一个结果。"

#: ../../sphinx/sphinx/events.pydocstring of
#: sphinx.events.EventManager.emit_firstresult:3
msgid ""
"This returns the result of the first handler that doesn't return ``None``."
msgstr "这将返回第一个不返回“None”的处理程序的结果。"
