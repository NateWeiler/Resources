# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2018
# gilberto dos santos alves <gsavix@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 2.0.0+/f9414ea\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-19 17:10+0000\n"
"PO-Revision-Date: 2018-02-12 13:49+0000\n"
"Last-Translator: gilberto dos santos alves <gsavix@gmail.com>, 2019\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/sphinx-doc/teams/15434/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../sphinx/doc/web/quickstart.rst:4
msgid "Web Support Quick Start"
msgstr "Web Suporte Início Rápido"

#: ../../sphinx/doc/web/quickstart.rst:7
msgid "Building Documentation Data"
msgstr "Construindo Dados da Documentação"

#: ../../sphinx/doc/web/quickstart.rst:9
msgid ""
"To make use of the web support package in your application you'll need to "
"build the data it uses.  This data includes pickle files representing "
"documents, search indices, and node data that is used to track where "
"comments and other things are in a document.  To do this you will need to "
"create an instance of the :class:`~.WebSupport` class and call its "
":meth:`~.WebSupport.build` method::"
msgstr ""
"Para fazer uso, do pacote de suporte a web, em sua aplicação é necessário "
"construir os dados que o pacote utiliza. Esses dados incluem arquivos tipo "
"pickle representando os documentos, índices de busca e dados que serão "
"usados para comentários e outras finalidades dentro do documento. Para isso "
"é necessário criar uma instância da :class:`~.WebSupport` e chamar o método "
":meth:`~.WebSupport.build`::"

#: ../../sphinx/doc/web/quickstart.rst:23
msgid ""
"This will read reStructuredText sources from `srcdir` and place the "
"necessary data in `builddir`.  The `builddir` will contain two sub-"
"directories: one named \"data\" that contains all the data needed to display"
" documents, search through documents, and add comments to documents.  The "
"other directory will be called \"static\" and contains static files that "
"should be served from \"/static\"."
msgstr ""
"Isso irá ler fontes reStructuredText a partir do `srcdir` e criar os dados "
"necessários no `builddir`. O `builddir` irá conter dois sub-diretórios: um "
"chamado \"data\" que contém todos os dados necessários para exibir, "
"pesquisar e adicionar comentários aos documentos. O outro diretórico chamado"
" \"estático\" irá conter arquivos estáticos que serão servidos a partir de "
"\"/static\". "

#: ../../sphinx/doc/web/quickstart.rst:31
msgid ""
"If you wish to serve static files from a path other than \"/static\", you "
"can do so by providing the *staticdir* keyword argument when creating the "
":class:`~.WebSupport` object."
msgstr ""
"Se desejar servir arquivos estáticos a partir de outro caminho que não "
"\"/static\", deverá ser providenciado o argumento *staticdir* quando criada "
"a :class:`~.WebSupport` do objeto."

#: ../../sphinx/doc/web/quickstart.rst:37
msgid "Integrating Sphinx Documents Into Your Webapp"
msgstr "Integrando Documentos Sphinx em sua aplicação Web"

#: ../../sphinx/doc/web/quickstart.rst:39
msgid ""
"Now that the data is built, it's time to do something useful with it.  Start"
" off by creating a :class:`~.WebSupport` object for your application::"
msgstr ""
"Agora que os dados foram construídos, é hora de fazer algo útil com eles. "
"Inicie criando a :class:`~.WebSupport` do objeto para sua aplicação::"

#: ../../sphinx/doc/web/quickstart.rst:47
msgid ""
"You'll only need one of these for each set of documentation you will be "
"working with.  You can then call its :meth:`~.WebSupport.get_document` "
"method to access individual documents::"
msgstr ""
"Só será necessário um desses conjuntos de documentação no qual está "
"trabalhando. Pode ser chamado o método :meth:`~.WebSupport.get_document` "
"para acessar individualmente os documentos::"

#: ../../sphinx/doc/web/quickstart.rst:53
msgid "This will return a dictionary containing the following items:"
msgstr "Isso irá retornar um dicionário contendo os seguintes itens:"

#: ../../sphinx/doc/web/quickstart.rst:55
msgid "**body**: The main body of the document as HTML"
msgstr "**body**: O corpo principal do documento como HTML"

#: ../../sphinx/doc/web/quickstart.rst:56
msgid "**sidebar**: The sidebar of the document as HTML"
msgstr "**sidebar**: A barra lateral do documento como HTML"

#: ../../sphinx/doc/web/quickstart.rst:57
msgid "**relbar**: A div containing links to related documents"
msgstr "**relbal**: Div contendo links para documentos relacionados"

#: ../../sphinx/doc/web/quickstart.rst:58
msgid "**title**: The title of the document"
msgstr "**title**: O título do documento"

#: ../../sphinx/doc/web/quickstart.rst:59
msgid "**css**: Links to CSS files used by Sphinx"
msgstr "**css**: Links para arquivos CSS usados pelo Sphinx"

#: ../../sphinx/doc/web/quickstart.rst:60
msgid "**script**: JavaScript containing comment options"
msgstr "**script**: JavaScript contendo opções de comentários"

#: ../../sphinx/doc/web/quickstart.rst:62
msgid ""
"This dict can then be used as context for templates.  The goal is to be easy"
" to integrate with your existing templating system.  An example using "
"`Jinja2 <http://jinja.pocoo.org/>`_ is:"
msgstr ""
"Esse dicionário dict, pode então ser usado como contexto para modelos. O "
"objetivo é facilitar a integração com seu sistema de modelos. Um exemplo "
"usando `Jinja2 <http://jinja.pocoo.org/>`_ é:"

#: ../../sphinx/doc/web/quickstart.rst:99
msgid "Authentication"
msgstr "Autenticação"

#: ../../sphinx/doc/web/quickstart.rst:101
msgid ""
"To use certain features such as voting, it must be possible to authenticate "
"users.  The details of the authentication are left to your application.  "
"Once a user has been authenticated you can pass the user's details to "
"certain :class:`~.WebSupport` methods using the *username* and *moderator* "
"keyword arguments.  The web support package will store the username with "
"comments and votes.  The only caveat is that if you allow users to change "
"their username you must update the websupport package's data::"
msgstr ""
"Para cirar certas funcionalidades como enquete, deve ser possível autenticar"
" usuários. Os detalhes da autenticação são deixados para sua aplicação. "
"Quando um usuário for autenticado, podemos passar a usar certos detalhes de "
"classes :class:`~.WebSupport` e métodos usando argumentos *username* e "
"*moderador* . O suporte ao pacote web irá armazenar nome do usuário com os "
"comentários e votos. O cuidado é para que quando o nome do usuário for "
"atualizado, sua aplicação deverá atualizar os dados de websuporte."

#: ../../sphinx/doc/web/quickstart.rst:111
msgid ""
"*username* should be a unique string which identifies a user, and "
"*moderator* should be a boolean representing whether the user has moderation"
" privileges. The default value for *moderator* is ``False``."
msgstr ""
"*username* deve ser string única que identifica o usuário, e *moderator* "
"deve ser um booleano representando onde o usuário tem privilégio de "
"moderação. O valor padrão para *moderator* é ``False``."

#: ../../sphinx/doc/web/quickstart.rst:115
msgid ""
"An example `Flask <http://flask.pocoo.org/>`_ function that checks whether a"
" user is logged in and then retrieves a document is::"
msgstr ""
"Um exemplo é a função `Flask <http://flask.pocoo.org/>`_ que verifica se o "
"usuário está logado e então recupera documentos ::"

#: ../../sphinx/doc/web/quickstart.rst:130
msgid ""
"The first thing to notice is that the *docname* is just the request path.  "
"This makes accessing the correct document easy from a single view.  If the "
"user is authenticated, then the username and moderation status are passed "
"along with the docname to :meth:`~.WebSupport.get_document`.  The web "
"support package will then add this data to the ``COMMENT_OPTIONS`` that are "
"used in the template."
msgstr ""
"O primeiro detalhe a notar é que *docname* é o caminho da requisição. Isso "
"torna fácil acessar o caminho correto do documento em uma simples visão. Se "
"o usuário está autenticado, então o nome do usuário e situação de moderação "
"são passadas junto com o método :meth:`~.WebSupport.get_document`. O pacote "
"suporte a web irá adicionar dados em ``COMMENT_OPTIONS`` os quais serão "
"usados como modelo."

#: ../../sphinx/doc/web/quickstart.rst:138
msgid ""
"This only works if your documentation is served from your document root. If "
"it is served from another directory, you will need to prefix the url route "
"with that directory, and give the `docroot` keyword argument when creating "
"the web support object::"
msgstr ""
"Isso só funciona se sua documentação é servida a partir do diretório raiz. "
"Se for servida de outro diretório, deve ser informado o prefixo complementar"
" da url até esse diretório no argumento `docroot` quando criado o objeto "
"websupport::"

#: ../../sphinx/doc/web/quickstart.rst:149
msgid "Performing Searches"
msgstr "Realizando Pesquisas"

#: ../../sphinx/doc/web/quickstart.rst:151
msgid ""
"To use the search form built-in to the Sphinx sidebar, create a function to "
"handle requests to the url 'search' relative to the documentation root.  The"
" user's search query will be in the GET parameters, with the key `q`.  Then "
"use the :meth:`~sphinxcontrib.websupport.WebSupport.get_search_results` "
"method to retrieve search results. In `Flask <http://flask.pocoo.org/>`_ "
"that would be like this::"
msgstr ""
"Para usar o formulário nativo de pesquisa na Barra Lateral do Sphinx, criar "
"uma função para  manusear requisições na url 'busca' relativa ao documento "
"raiz. A busca da consulta do usuário estará nos parâmetros GET, na chave "
"`q`. Então usar o método "
":meth:`~sphinxcontrib.websupport.WebSupport.get_search_results` para "
"recuperar resultados da busca. Em `Flask <http://flask.pocoo.org/>`_ verá "
"algo assim::"

#: ../../sphinx/doc/web/quickstart.rst:163
msgid ""
"Note that we used the same template to render our search results as we did "
"to render our documents.  That's because "
":meth:`~.WebSupport.get_search_results` returns a context dict in the same "
"format that :meth:`~.WebSupport.get_document` does."
msgstr ""
"Note que usamos o mesmo modelo para renderizar os resultados da pesquisa, "
"como fizemos com nossos documentos. Isto é porque o método "
":meth:`~.WebSupport.get_search_results` retorna o mesmo formato que o método"
" :meth:`~.WebSupport.get_document` utiliza."

#: ../../sphinx/doc/web/quickstart.rst:170
msgid "Comments & Proposals"
msgstr "Comentários & Propostas"

#: ../../sphinx/doc/web/quickstart.rst:172
msgid ""
"Now that this is done it's time to define the functions that handle the AJAX"
" calls from the script.  You will need three functions.  The first function "
"is used to add a new comment, and will call the web support method "
":meth:`~.WebSupport.add_comment`::"
msgstr ""
"Agora que isto está feito, podemos definir as funções para manusear chamadas"
" AJAX a partir do script. Precisaremos de três funções. A primeira função é "
"usada para adicionar novo comentário e irá chamar o método de suporte da web"
" :meth:`~.WebSupport.add_comment`::"

#: ../../sphinx/doc/web/quickstart.rst:189
msgid ""
"You'll notice that both a `parent_id` and `node_id` are sent with the "
"request. If the comment is being attached directly to a node, `parent_id` "
"will be empty. If the comment is a child of another comment, then `node_id` "
"will be empty. Then next function handles the retrieval of comments for a "
"specific node, and is aptly named "
":meth:`~sphinxcontrib.websupport.WebSupport.get_data`::"
msgstr ""
"Perceba que ambos `parent_id` e `node_id`, são enviados na requisição. Se o "
"comentário está vinculado diretamente ao node, `parent_id` está vazio. Se o "
"comentário é subordinado a outro comentário, então `node_id` está vazio. "
"Então a próxima função manipulará a recuperação do comentário para um node "
"específico e nomeado por "
":meth:`~sphinxcontrib.websupport.WebSupport.get_data`::"

#: ../../sphinx/doc/web/quickstart.rst:204
msgid ""
"The final function that is needed will call "
":meth:`~.WebSupport.process_vote`, and will handle user votes on comments::"
msgstr ""
"A função final irá chamar o método :meth:`~.WebSupport.process_vote` e ira "
"manusear os votos do usuário nos comentários::"

#: ../../sphinx/doc/web/quickstart.rst:220
msgid "Comment Moderation"
msgstr "Moderação de Comentário"

#: ../../sphinx/doc/web/quickstart.rst:222
msgid ""
"By default, all comments added through :meth:`~.WebSupport.add_comment` are "
"automatically displayed.  If you wish to have some form of moderation, you "
"can pass the `displayed` keyword argument::"
msgstr ""
"Por padrão, todos comentários adicionados através do método "
":meth:`~.WebSupport.add_comment` são automaticamente exibidos. Se desejar "
"alguma forma de moderação, deve ser passado o argumento `displayed`::"

#: ../../sphinx/doc/web/quickstart.rst:231
msgid ""
"You can then create a new view to handle the moderation of comments.  It "
"will be called when a moderator decides a comment should be accepted and "
"displayed::"
msgstr ""
"Pode ser criada uma nova visão para manusear moderação de comentários. Será "
"ativada quando o moderador decidir que um comentário deva ser aceito e "
"exibido::"

#: ../../sphinx/doc/web/quickstart.rst:242
msgid "Rejecting comments happens via comment deletion."
msgstr "Rejeitar comentários ocorre através de apagar comentário."

#: ../../sphinx/doc/web/quickstart.rst:244
msgid ""
"To perform a custom action (such as emailing a moderator) when a new comment"
" is added but not displayed, you can pass callable to the "
":class:`~.WebSupport` class when instantiating your support object::"
msgstr ""
"Para executar ação configurada (como email para moderador) quando um novo "
"comentário for adicionado, mas ainda não estar exibido, pode ser chamada a "
"classe :class:`~.WebSupport` quando instanciado o suporte do objeto::"

#: ../../sphinx/doc/web/quickstart.rst:253
msgid ""
"The moderation callback must take one argument, which will be the same "
"comment dict that is returned by :meth:`add_comment`."
msgstr ""
"A chamada de retorno da moderação deve ter um argumento que deve ser o mesmo"
" dict comentado que foi retornado com :meth:`add_comment`."
