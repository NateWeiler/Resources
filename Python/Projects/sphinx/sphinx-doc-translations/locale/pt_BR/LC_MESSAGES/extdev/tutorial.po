# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# gilberto dos santos alves <gsavix@gmail.com>, 2018
# Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 2.0.0+/25fed568\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-22 17:26+0000\n"
"PO-Revision-Date: 2018-02-12 13:48+0000\n"
"Last-Translator: Claudio Rogerio Carvalho Filho <excriptbrasil@gmail.com>, 2019\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/sphinx-doc/teams/15434/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../sphinx/doc/extdev/tutorial.rst:4
msgid "Tutorial: Writing a simple extension"
msgstr "Tutorial: Escrevendo uma extensão simples"

#: ../../sphinx/doc/extdev/tutorial.rst:6
msgid ""
"This section is intended as a walkthrough for the creation of custom "
"extensions. It covers the basics of writing and activating an extension, as "
"well as commonly used features of extensions."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:10
msgid ""
"As an example, we will cover a \"todo\" extension that adds capabilities to "
"include todo entries in the documentation, and to collect these in a central"
" place.  (A similar \"todo\" extension is distributed with Sphinx.)"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:16
msgid "Important objects"
msgstr "Objetos importantes"

#: ../../sphinx/doc/extdev/tutorial.rst:18
msgid ""
"There are several key objects whose API you will use while writing an "
"extension.  These are:"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:27
msgid "**Application**"
msgstr "**Applicação**"

#: ../../sphinx/doc/extdev/tutorial.rst:22
msgid ""
"The application object (usually called ``app``) is an instance of "
":class:`.Sphinx`.  It controls most high-level functionality, such as the "
"setup of extensions, event dispatching and producing output (logging)."
msgstr ""
"O objeto de aplicação (geralmente chamado ``app``) é uma instância de "
":class:`.Sphinx`. Ele controla a maioria das funcionalidades de alto nível, "
"como a configuração de extensões, o despacho de eventos e a produção de "
"saída (logging)."

#: ../../sphinx/doc/extdev/tutorial.rst:26
msgid ""
"If you have the environment object, the application is available as "
"``env.app``."
msgstr ""
"Se você tiver o objeto de ambiente, o aplicativo estará disponível como "
"``env.app``."

#: ../../sphinx/doc/extdev/tutorial.rst:40
msgid "**Environment**"
msgstr "**Ambiente**"

#: ../../sphinx/doc/extdev/tutorial.rst:30
msgid ""
"The build environment object (usually called ``env``) is an instance of "
":class:`.BuildEnvironment`.  It is responsible for parsing the source "
"documents, stores all metadata about the document collection and is "
"serialized to disk after each build."
msgstr ""
"O objeto do ambiente de construção (geralmente chamado ``env``) é uma "
"instância de :class:`.BuildEnvironment`. Ele é responsável por analisar os "
"documentos de origem, armazena todos os metadados sobre a coleção de "
"documentos e é serializado em disco após cada compilação."

#: ../../sphinx/doc/extdev/tutorial.rst:35
msgid ""
"Its API provides methods to do with access to metadata, resolving "
"references, etc.  It can also be used by extensions to cache information "
"that should persist for incremental rebuilds."
msgstr ""
"Sua API fornece métodos para acessar metadados, resolver referências, etc. "
"Também pode ser usada por extensões para armazenar em cache informações que "
"devem persistir para recriações incrementais."

#: ../../sphinx/doc/extdev/tutorial.rst:39
msgid ""
"If you have the application or builder object, the environment is available "
"as ``app.env`` or ``builder.env``."
msgstr ""
"Se você tiver o objeto do aplicativo ou construtor, o ambiente estará "
"disponível como ``app.env`` ou ``builder.env``."

#: ../../sphinx/doc/extdev/tutorial.rst:49
msgid "**Builder**"
msgstr "**Construtor**"

#: ../../sphinx/doc/extdev/tutorial.rst:43
msgid ""
"The builder object (usually called ``builder``) is an instance of a specific"
" subclass of :class:`.Builder`.  Each builder class knows how to convert the"
" parsed documents into an output format, or otherwise process them (e.g. "
"check external links)."
msgstr ""
"O objeto construtor (geralmente chamado ``builder``) é uma instância de uma "
"subclasse específica de :class:`.Builder`. Cada classe de construtor sabe "
"como converter os documentos analisados em um formato de saída ou processá-"
"los (por exemplo, verificar links externos)."

#: ../../sphinx/doc/extdev/tutorial.rst:48
msgid ""
"If you have the application object, the builder is available as "
"``app.builder``."
msgstr ""
"Se você tiver o objeto do aplicativo, o construtor estará disponível como "
"``app.builder``."

#: ../../sphinx/doc/extdev/tutorial.rst:57
msgid "**Config**"
msgstr "**Config**"

#: ../../sphinx/doc/extdev/tutorial.rst:52
msgid ""
"The config object (usually called ``config``) provides the values of "
"configuration values set in :file:`conf.py` as attributes.  It is an "
"instance of :class:`.Config`."
msgstr ""
"O objeto de configuração (geralmente chamado ``config``) fornece os valores "
"dos valores de configuração definidos em :file:`conf.py` como atributos. É "
"uma instância de :class:`.Config`."

#: ../../sphinx/doc/extdev/tutorial.rst:56
msgid "The config is available as ``app.config`` or ``env.config``."
msgstr "A configuração está disponível como ``app.config`` ou ``env.config``."

#: ../../sphinx/doc/extdev/tutorial.rst:60
msgid "Build Phases"
msgstr "Fases Construção"

#: ../../sphinx/doc/extdev/tutorial.rst:62
msgid ""
"One thing that is vital in order to understand extension mechanisms is the "
"way in which a Sphinx project is built: this works in several phases."
msgstr ""
"Uma coisa que é vital para entender os mecanismos de extensão é a maneira "
"como um projeto ``Sphinx`` é construído: isso funciona em várias fases."

#: ../../sphinx/doc/extdev/tutorial.rst:65
msgid "**Phase 0: Initialization**"
msgstr "**Phase 0: Inicialização**"

#: ../../sphinx/doc/extdev/tutorial.rst:67
msgid ""
"In this phase, almost nothing of interest to us happens.  The source "
"directory is searched for source files, and extensions are initialized. "
"Should a stored build environment exist, it is loaded, otherwise a new one "
"is created."
msgstr ""
"Nesta fase, quase nada de interessante para nós acontece. O diretório de "
"origem é pesquisado por arquivos de origem e as extensões são inicializadas."
" Se existir um ambiente de compilação armazenado, ele será carregado, caso "
"contrário, um novo será criado."

#: ../../sphinx/doc/extdev/tutorial.rst:72
msgid "**Phase 1: Reading**"
msgstr "**Phase 1: Leitura**"

#: ../../sphinx/doc/extdev/tutorial.rst:74
msgid ""
"In Phase 1, all source files (and on subsequent builds, those that are new "
"or changed) are read and parsed.  This is the phase where directives and "
"roles are encountered by docutils, and the corresponding code is executed.  "
"The output of this phase is a *doctree* for each source file; that is a tree"
" of docutils nodes.  For document elements that aren't fully known until all"
" existing files are read, temporary nodes are created."
msgstr ""
"Na Fase 1, todos os arquivos de origem (e em compilações subsequentes, "
"aqueles que são novos ou alterados) são lidos e analisados. Esta é a fase em"
" que diretivas e funções são encontradas pelos ``docutils`` e o código "
"correspondente é executado. A saída desta fase é um *doctree* para cada "
"arquivo de origem; isso é uma árvore de nós ``docutils``. Para elementos de "
"documento que não são totalmente conhecidos até que todos os arquivos "
"existentes sejam lidos, nós temporários são criados."

#: ../../sphinx/doc/extdev/tutorial.rst:81
msgid ""
"There are nodes provided by docutils, which are documented `in the docutils "
"documentation <http://docutils.sourceforge.net/docs/ref/doctree.html>`__. "
"Additional nodes are provided by Sphinx and :ref:`documented here <nodes>`."
msgstr ""
"Existem nós fornecidos por ``docutils``, que são documentados `na "
"documentação do docutils "
"<http://docutils.sourceforge.net/docs/ref/doctree.html>`__. Nós adicionais "
"são fornecidos pelo ``Sphinx`` e :ref:`documented here <nodes>`."

#: ../../sphinx/doc/extdev/tutorial.rst:85
msgid ""
"During reading, the build environment is updated with all meta- and cross "
"reference data of the read documents, such as labels, the names of headings,"
" described Python objects and index entries.  This will later be used to "
"replace the temporary nodes."
msgstr ""
"Durante a leitura, o ambiente de compilação é atualizado com todos os dados "
"de meta e referência cruzada dos documentos lidos, como labels, os nomes dos"
" títulos, objetos descritos do Python e entradas de índice. Isso será usado "
"posteriormente para substituir os nós temporários."

#: ../../sphinx/doc/extdev/tutorial.rst:90
msgid ""
"The parsed doctrees are stored on the disk, because it is not possible to "
"hold all of them in memory."
msgstr ""
"Os ``doctrees`` analisados são armazenados no disco, porque não é possível "
"manter todos eles na memória."

#: ../../sphinx/doc/extdev/tutorial.rst:93
msgid "**Phase 2: Consistency checks**"
msgstr "**Phase 2: Verificações e consistências**"

#: ../../sphinx/doc/extdev/tutorial.rst:95
msgid "Some checking is done to ensure no surprises in the built documents."
msgstr ""
"Alguma verificação é feita para garantir que não haja surpresas nos "
"documentos construídos."

#: ../../sphinx/doc/extdev/tutorial.rst:97
msgid "**Phase 3: Resolving**"
msgstr "**Fase 3: Resolução**"

#: ../../sphinx/doc/extdev/tutorial.rst:99
msgid ""
"Now that the metadata and cross-reference data of all existing documents is "
"known, all temporary nodes are replaced by nodes that can be converted into "
"output using components called tranform.  For example, links are created for"
" object references that exist, and simple literal nodes are created for "
"those that don't."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:105
msgid "**Phase 4: Writing**"
msgstr "**Fase 4: Gravação**"

#: ../../sphinx/doc/extdev/tutorial.rst:107
msgid ""
"This phase converts the resolved doctrees to the desired output format, such"
" as HTML or LaTeX.  This happens via a so-called docutils writer that visits"
" the individual nodes of each doctree and produces some output in the "
"process."
msgstr ""
"Esta fase converte os ``doctrees`` resolvidos no formato de saída desejado, "
"como HTML ou LaTeX. Isso acontece por meio de um escritor chamado "
"``docutils``, que visita os nós individuais de cada ``doctree`` e produz "
"alguma saída no processo."

#: ../../sphinx/doc/extdev/tutorial.rst:113
msgid ""
"Some builders deviate from this general build plan, for example, the builder"
" that checks external links does not need anything more than the parsed "
"doctrees and therefore does not have phases 2--4."
msgstr ""
"Alguns construtores se desviam desse plano de construção geral, por exemplo,"
" o construtor que verifica links externos não precisa de nada além dos "
"``doctrees`` analisados e, portanto, não possui as fases 2-4."

#: ../../sphinx/doc/extdev/tutorial.rst:119
msgid "Extension Design"
msgstr "Design de Extensão"

#: ../../sphinx/doc/extdev/tutorial.rst:121
msgid "We want the extension to add the following to Sphinx:"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:123
msgid ""
"A \"todo\" directive, containing some content that is marked with \"TODO\", "
"and only shown in the output if a new config value is set.  (Todo entries "
"should not be in the output by default.)"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:127
msgid ""
"A \"todolist\" directive that creates a list of all todo entries throughout "
"the documentation."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:130
msgid "For that, we will need to add the following elements to Sphinx:"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:132
msgid "New directives, called ``todo`` and ``todolist``."
msgstr "Novas diretivas, chamadas ``todo`` e ``todolist``."

#: ../../sphinx/doc/extdev/tutorial.rst:133
msgid ""
"New document tree nodes to represent these directives, conventionally also "
"called ``todo`` and ``todolist``.  We wouldn't need new nodes if the new "
"directives only produced some content representable by existing nodes."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:136
msgid ""
"A new config value ``todo_include_todos`` (config value names should start "
"with the extension name, in order to stay unique) that controls whether todo"
" entries make it into the output."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:139
msgid ""
"New event handlers: one for the :event:`doctree-resolved` event, to replace "
"the todo and todolist nodes, and one for :event:`env-purge-doc` (the reason "
"for that will be covered later)."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:145
msgid "The Setup Function"
msgstr "Config da Função"

#: ../../sphinx/doc/extdev/tutorial.rst:149
msgid ""
"The new elements are added in the extension's setup function.  Let us create"
" a new Python module called :file:`todo.py` and add the setup function::"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:168
msgid ""
"The calls in this function refer to classes and functions not yet written.  "
"What the individual calls do is the following:"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:171
msgid ""
":meth:`~Sphinx.add_config_value` lets Sphinx know that it should recognize "
"the new *config value* ``todo_include_todos``, whose default value should be"
" ``False`` (this also tells Sphinx that it is a boolean value)."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:175
msgid ""
"If the third argument was ``'html'``, HTML documents would be full rebuild "
"if the config value changed its value.  This is needed for config values "
"that influence reading (build phase 1)."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:179
msgid ""
":meth:`~Sphinx.add_node` adds a new *node class* to the build system.  It "
"also can specify visitor functions for each supported output format.  These "
"visitor functions are needed when the new nodes stay until phase 4 -- since "
"the ``todolist`` node is always replaced in phase 3, it doesn't need any."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:184
msgid ""
"We need to create the two node classes ``todo`` and ``todolist`` later."
msgstr "Precisamos criar duas classes ``todo`` e depois ``todolist``."

#: ../../sphinx/doc/extdev/tutorial.rst:186
msgid ""
":meth:`~Sphinx.add_directive` adds a new *directive*, given by name and "
"class."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:188
msgid "The handler functions are created later."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:190
msgid ""
"Finally, :meth:`~Sphinx.connect` adds an *event handler* to the event whose "
"name is given by the first argument.  The event handler function is called "
"with several arguments which are documented with the event."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:196
msgid "The Node Classes"
msgstr "Anatomia de Classes"

#: ../../sphinx/doc/extdev/tutorial.rst:198
msgid "Let's start with the node classes::"
msgstr "Vamos iniciar com classes::"

#: ../../sphinx/doc/extdev/tutorial.rst:214
msgid ""
"Node classes usually don't have to do anything except inherit from the "
"standard docutils classes defined in :mod:`docutils.nodes`.  ``todo`` "
"inherits from ``Admonition`` because it should be handled like a note or "
"warning, ``todolist`` is just a \"general\" node."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:221
msgid ""
"Many extensions will not have to create their own node classes and work fine"
" with the nodes already provided by `docutils "
"<http://docutils.sourceforge.net/docs/ref/doctree.html>`__ and :ref:`Sphinx "
"<nodes>`."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:228
msgid "The Directive Classes"
msgstr "Diretiva Classes"

#: ../../sphinx/doc/extdev/tutorial.rst:230
msgid ""
"A directive class is a class deriving usually from "
":class:`docutils.parsers.rst.Directive`.  The directive interface is also "
"covered in detail in the `docutils documentation`_; the important thing is "
"that the class should have attributes that configure the allowed markup, and"
" a ``run`` method that returns a list of nodes."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:236
msgid "The ``todolist`` directive is quite simple::"
msgstr "Diretiva ``todolist`` é simples::"

#: ../../sphinx/doc/extdev/tutorial.rst:245
msgid ""
"An instance of our ``todolist`` node class is created and returned.  The "
"todolist directive has neither content nor arguments that need to be "
"handled."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:248
msgid "The ``todo`` directive function looks like this::"
msgstr "Diretiva função ``todo`` parece com isso::"

#: ../../sphinx/doc/extdev/tutorial.rst:278
msgid ""
"Several important things are covered here. First, as you can see, you can "
"refer to the build environment instance using "
"``self.state.document.settings.env``."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:281
msgid ""
"Then, to act as a link target (from the todolist), the todo directive needs "
"to return a target node in addition to the todo node.  The target ID (in "
"HTML, this will be the anchor name) is generated by using "
"``env.new_serialno`` which returns a new unique integer on each call and "
"therefore leads to unique target names.  The target node is instantiated "
"without any text (the first two arguments)."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:288
msgid ""
"On creating admonition node, the content body of the directive are parsed "
"using ``self.state.nested_parse``.  The first argument gives the content "
"body, and the second one gives content offset.  The third argument gives the"
" parent node of parsed result, in our case the ``todo`` node."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:293
msgid ""
"Then, the todo node is added to the environment.  This is needed to be able "
"to create a list of all todo entries throughout the documentation, in the "
"place where the author puts a ``todolist`` directive.  For this case, the "
"environment attribute ``todo_all_todos`` is used (again, the name should be "
"unique, so it is prefixed by the extension name).  It does not exist when a "
"new environment is created, so the directive must check and create it if "
"necessary.  Various information about the todo entry's location are stored "
"along with a copy of the node."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:302
msgid ""
"In the last line, the nodes that should be put into the doctree are "
"returned: the target node and the admonition node."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:305
msgid "The node structure that the directive returns looks like this::"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:323
msgid "The Event Handlers"
msgstr "Manipuladores de Eventos"

#: ../../sphinx/doc/extdev/tutorial.rst:325
msgid ""
"Finally, let's look at the event handlers.  First, the one for the :event"
":`env-purge-doc` event::"
msgstr ""
"Finalmente, vamos dar uma olhada nos manipuladores.  Primeiro, o evento "
":event:`env-purge-doc`::"

#: ../../sphinx/doc/extdev/tutorial.rst:334
msgid ""
"Since we store information from source files in the environment, which is "
"persistent, it may become out of date when the source file changes.  "
"Therefore, before each source file is read, the environment's records of it "
"are cleared, and the :event:`env-purge-doc` event gives extensions a chance "
"to do the same. Here we clear out all todos whose docname matches the given "
"one from the ``todo_all_todos`` list.  If there are todos left in the "
"document, they will be added again during parsing."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:342
msgid ""
"The other handler belongs to the :event:`doctree-resolved` event.  This "
"event is emitted at the end of phase 3 and allows custom resolving to be "
"done::"
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:386
msgid ""
"It is a bit more involved.  If our new \"todo_include_todos\" config value "
"is false, all todo and todolist nodes are removed from the documents."
msgstr ""

#: ../../sphinx/doc/extdev/tutorial.rst:389
msgid ""
"If not, todo nodes just stay where and how they are.  Todolist nodes are "
"replaced by a list of todo entries, complete with backlinks to the location "
"where they come from.  The list items are composed of the nodes from the "
"todo entry and docutils nodes created on the fly: a paragraph for each "
"entry, containing text that gives the location, and a link (reference node "
"containing an italic node) with the backreference.  The reference URI is "
"built by ``app.builder.get_relative_uri`` which creates a suitable URI "
"depending on the used builder, and appending the todo node's (the target's) "
"ID as the anchor name."
msgstr ""
