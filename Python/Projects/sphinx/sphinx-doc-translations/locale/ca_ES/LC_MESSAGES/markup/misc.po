# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.8.0+/b8e20ed\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-28 15:07+0000\n"
"PO-Revision-Date: 2018-02-12 13:49+0000\n"
"Language-Team: Catalan (Spain) (https://www.transifex.com/sphinx-doc/teams/15434/ca_ES/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ca_ES\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../sphinx/doc/markup/misc.rst:4
msgid "Miscellaneous markup"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:9
msgid "File-wide metadata"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:11
msgid ""
"reST has the concept of \"field lists\"; these are a sequence of fields "
"marked up like this::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:16
msgid ""
"A field list near the top of a file is parsed by docutils as the \"docinfo\""
" which is normally used to record the author, date of publication and other "
"metadata.  *In Sphinx*, a field list preceding any other markup is moved "
"from the docinfo to the Sphinx environment as document metadata and is not "
"displayed in the output; a field list appearing after the document title "
"will be part of the docinfo as normal and will be displayed in the output."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:23
msgid "At the moment, these metadata fields are recognized:"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:28
msgid "``tocdepth``"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:26
msgid "The maximum depth for a table of contents of this file."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:32
msgid "``nocomments``"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:31
msgid ""
"If set, the web application won't display a comment form for a page "
"generated from this source file."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:39
msgid "``orphan``"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:35
msgid ""
"If set, warnings about this file not being included in any toctree will be "
"suppressed."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:42
msgid "Meta-information markup"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:46
msgid ""
"Identifies the author of the current section.  The argument should include "
"the author's name such that it can be used for presentation and email "
"address.  The domain name portion of the address should be lower case. "
"Example::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:53
msgid ""
"By default, this markup isn't reflected in the output in any way (it helps "
"keep track of contributions), but you can set the configuration value "
":confval:`show_authors` to ``True`` to make them produce a paragraph in the "
"output."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:61
msgid ""
"The :rst:dir:`codeauthor` directive, which can appear multiple times, names "
"the authors of the described code, just like :rst:dir:`sectionauthor` names "
"the author(s) of a piece of documentation.  It too only produces output if "
"the :confval:`show_authors` configuration value is ``True``."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:68
msgid "Index-generating markup"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:70
msgid ""
"Sphinx automatically creates index entries from all object descriptions "
"(like functions, classes or attributes) like discussed in :ref:`domains`."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:73
msgid ""
"However, there is also explicit markup available, to make the index more "
"comprehensive and enable index entries in documents where information is not"
" mainly contained in information units, such as the language reference."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:79
msgid ""
"This directive contains one or more index entries.  Each entry consists of a"
" type and a value, separated by a colon."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:82
msgid "For example::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:95
msgid ""
"This directive contains five entries, which will be converted to entries in "
"the generated index which link to the exact location of the index statement "
"(or, in case of offline media, the corresponding page number)."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:99
msgid ""
"Since index directives generate cross-reference targets at their location in"
" the source, it makes sense to put them *before* the thing they refer to -- "
"e.g. a heading, as in the example above."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:103
msgid "The possible entry types are:"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:107
msgid "single"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:106
msgid ""
"Creates a single index entry.  Can be made a subentry by separating the "
"subentry text with a semicolon (this notation is also used below to describe"
" what entries are created)."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:110
msgid "pair"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:110
msgid ""
"``pair: loop; statement`` is a shortcut that creates two index entries, "
"namely ``loop; statement`` and ``statement; loop``."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:114
msgid "triple"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:113
msgid ""
"Likewise, ``triple: module; search; path`` is a shortcut that creates three "
"index entries, which are ``module; search path``, ``search; path, module`` "
"and ``path; module search``."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:117
msgid "see"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:117
msgid ""
"``see: entry; other`` creates an index entry that refers from ``entry`` to "
"``other``."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:119
msgid "seealso"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:120
msgid "Like ``see``, but inserts \"see also\" instead of \"see\"."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:124
msgid "module, keyword, operator, object, exception, statement, builtin"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:122
msgid ""
"These all create two index entries.  For example, ``module: hashlib`` "
"creates the entries ``module; hashlib`` and ``hashlib; module``.  (These are"
" Python-specific and therefore deprecated.)"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:126
msgid ""
"You can mark up \"main\" index entries by prefixing them with an exclamation"
" mark.  The references to \"main\" entries are emphasized in the generated "
"index.  For example, if two pages contain ::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:132
msgid "and one page contains ::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:136
msgid ""
"then the backlink to the latter page is emphasized among the three "
"backlinks."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:138
msgid ""
"For index directives containing only \"single\" entries, there is a "
"shorthand notation::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:143
msgid "This creates four index entries."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:145
msgid "Added ``see`` and ``seealso`` types, as well as marking main entries."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:150
msgid ""
"While the :rst:dir:`index` directive is a block-level markup and links to "
"the beginning of the next paragraph, there is also a corresponding role that"
" sets the link target directly where it is used."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:154
msgid ""
"The content of the role can be a simple phrase, which is then kept in the "
"text and used as an index entry.  It can also be a combination of text and "
"index entry, styled like with explicit targets of cross-references.  In that"
" case, the \"target\" part can be a full entry as described for the "
"directive above.  For example::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:169
msgid "Including content based on tags"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:173
msgid ""
"Include the content of the directive only if the *expression* is true.  The "
"expression should consist of tags, like this::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:178
msgid ""
"Undefined tags are false, defined tags (via the ``-t`` command-line option "
"or within :file:`conf.py`, see :ref:`here <conf-tags>`) are true.  Boolean "
"expressions, also using parentheses (like ``html and (latex or draft)``) are"
" supported."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:183
msgid ""
"The *format* and the *name* of the current builder (``html``, ``latex`` or "
"``text``) are always set as a tag [#]_.  To make the distinction between "
"format and name explicit, they are also added with the prefix ``format_`` "
"and ``builder_``, e.g. the epub builder defines the tags  ``html``, "
"``epub``, ``format_html`` and ``builder_epub``."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:189
msgid ""
"These standard tags are set *after* the configuration file is read, so they "
"are not available there."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:192
msgid ""
"All tags must follow the standard Python identifier syntax as set out in the"
" `Identifiers and keywords "
"<https://docs.python.org/2/reference/lexical_analysis.html#identifiers>`_ "
"documentation.  That is, a tag expression may only consist of tags that "
"conform to the syntax of Python variables.  In ASCII, this consists of the "
"uppercase and lowercase letters ``A`` through ``Z``, the underscore ``_`` "
"and, except for the first character, the digits ``0`` through ``9``."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:201
msgid "Added the name of the builder and the prefixes."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:206
msgid ""
"This directive is designed to control only content of document.  It could "
"not control sections, labels and so on."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:211
msgid "Tables"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:213
msgid "Use :ref:`reStructuredText tables <rst-tables>`, i.e. either"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:215
msgid "grid table syntax (:duref:`ref <grid-tables>`),"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:216
msgid "simple table syntax (:duref:`ref <simple-tables>`),"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:217
msgid ":dudir:`csv-table` syntax,"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:218
msgid "or :dudir:`list-table` syntax."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:220
msgid ""
"The :dudir:`table` directive serves as optional wrapper of the *grid* and "
"*simple* syntaxes."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:223
msgid ""
"They work fine in HTML output, however there are some gotchas when using "
"tables in LaTeX: the column width is hard to determine correctly "
"automatically.  For this reason, the following directive exists:"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:230
msgid ""
"This directive gives a \"column spec\" for the next table occurring in the "
"source file.  The spec is the second argument to the LaTeX ``tabulary`` "
"package's environment (which Sphinx uses to translate tables).  It can have "
"values like ::"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:237
msgid ""
"which means three left-adjusted, nonbreaking columns.  For columns with "
"longer text that should automatically be broken, use either the standard "
"``p{width}`` construct, or tabulary's automatic specifiers:"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:242
msgid "``L``"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:242
msgid "flush left column with automatic width"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:244
msgid "``R``"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:244
msgid "flush right column with automatic width"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:246
msgid "``C``"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:246
msgid "centered column with automatic width"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:248
msgid "``J``"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:248
msgid "justified column with automatic width"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:251
msgid ""
"The automatic widths of the ``LRCJ`` columns are attributed by ``tabulary`` "
"in proportion to the observed shares in a first pass where the table cells "
"are rendered at their natural \"horizontal\" widths."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:255
msgid "By default, Sphinx uses a table layout with ``J`` for every column."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:259
msgid ""
"Merged cells may now contain multiple paragraphs and are much better "
"handled, thanks to custom Sphinx LaTeX macros. This novel situation "
"motivated the switch to ``J`` specifier and not ``L`` by default."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:266
msgid ""
"Sphinx actually uses ``T`` specifier having done ``\\newcolumntype{T}{J}``. "
"To revert to previous default, insert ``\\newcolumntype{T}{L}`` in the LaTeX"
" preamble (see :confval:`latex_elements`)."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:270
msgid ""
"A frequent issue with tabulary is that columns with little contents are "
"\"squeezed\". The minimal column width is a tabulary parameter called "
"``\\tymin``. You may set it globally in the LaTeX preamble via "
"``\\setlength{\\tymin}{40pt}`` for example."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:275
msgid ""
"Else, use the :rst:dir:`tabularcolumns` directive with an explicit "
"``p{40pt}`` (for example) for that column. You may use also ``l`` specifier "
"but this makes the task of setting column widths more difficult if some "
"merged cell intersects that column."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:282
msgid ""
"Tables with more than 30 rows are rendered using ``longtable``, not "
"``tabulary``, in order to allow pagebreaks. The ``L``, ``R``, ... specifiers"
" do not work for these tables."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:286
msgid ""
"Tables that contain list-like elements such as object descriptions, "
"blockquotes or any kind of lists cannot be set out of the box with "
"``tabulary``. They are therefore set with the standard LaTeX ``tabular`` (or"
" ``longtable``) environment if you don't give a ``tabularcolumns`` "
"directive. If you do, the table will be set with ``tabulary`` but you must "
"use the ``p{width}`` construct (or Sphinx's ``\\X`` and ``\\Y`` specifiers "
"described below) for the columns containing these elements."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:294
msgid ""
"Literal blocks do not work with ``tabulary`` at all, so tables containing a "
"literal block are always set with ``tabular``. The verbatim environment used"
" for literal blocks only works in ``p{width}`` (and ``\\X`` or ``\\Y``) "
"columns, hence Sphinx generates such column specs for tables containing "
"literal blocks."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:300
msgid ""
"Since Sphinx 1.5, the ``\\X{a}{b}`` specifier is used (there *is* a "
"backslash in the specifier letter). It is like ``p{width}`` with the width "
"set to a fraction ``a/b`` of the current line width. You can use it in the "
":rst:dir:`tabularcolumns` (it is not a problem if some LaTeX macro is also "
"called ``\\X``.)"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:306
msgid ""
"It is *not* needed for ``b`` to be the total number of columns, nor for the "
"sum of the fractions of the ``\\X`` specifiers to add  up to one. For "
"example ``|\\X{2}{5}|\\X{1}{5}|\\X{1}{5}|`` is legitimate and the table will"
" occupy 80% of the line width, the first of its three columns having the "
"same width as the sum  of the next two."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:312
msgid ""
"This is used by the ``:widths:`` option of the :dudir:`table` directive."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:314
msgid ""
"Since Sphinx 1.6, there is also the ``\\Y{f}`` specifier which admits a "
"decimal argument, such has ``\\Y{0.15}``: this would have the same effect as"
" ``\\X{3}{20}``."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:320
msgid ""
"Merged cells from complex grid tables (either multi-row, multi-column, or "
"both) now allow blockquotes, lists, literal blocks, ... as do regular cells."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:323
msgid ""
"Sphinx's merged cells interact well with ``p{width}``, ``\\X{a}{b}``, "
"``Y{f}`` and tabulary's columns."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:328
msgid ""
":rst:dir:`tabularcolumns` conflicts with ``:widths:`` option of table "
"directives.  If both are specified, ``:widths:`` option will be ignored."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:332
msgid "Math"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:334
msgid "See :ref:`math-support`."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:337
msgid "Footnotes"
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:338
msgid ""
"For most builders name and format are the same. At the moment only builders "
"derived from the html builder distinguish between the builder format and the"
" builder name."
msgstr ""

#: ../../sphinx/doc/markup/misc.rst:342
msgid ""
"Note that the current builder tag is not available in ``conf.py``, it is "
"only available after the builder is initialized."
msgstr ""
