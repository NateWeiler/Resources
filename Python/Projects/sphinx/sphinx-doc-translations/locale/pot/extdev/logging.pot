# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2020, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 4.0.0+/d9280e253\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-13 23:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sphinx/doc/extdev/logging.rst:4
msgid "Logging API"
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.getLogger:1
msgid "Get logger wrapped by :class:`sphinx.util.logging.SphinxLoggerAdapter`."
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.getLogger:3
msgid "Sphinx logger always uses ``sphinx.*`` namespace to be independent from settings of root logger.  It ensures logging is consistent even if a third-party extension or imported application resets logger settings."
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.getLogger:7
msgid "Example usage::"
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.SphinxLoggerAdapter:1
msgid "LoggerAdapter allowing ``type`` and ``subtype`` keywords."
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:16
msgid "Logs a message on this logger with the specified level. Basically, the arguments are as with python's logging module."
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:19
#: ../../sphinx/doc/extdev/logging.rst:48
msgid "In addition, Sphinx logger supports following keyword arguments:"
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:23
msgid "**type**, ***subtype***"
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:22
msgid "Categories of warning logs.  It is used to suppress warnings by :confval:`suppress_warnings` setting."
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:33
#: ../../sphinx/doc/extdev/logging.rst:56
msgid "**location**"
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:26
msgid "Where the warning happened.  It is used to include the path and line number in each log.  It allows docname, tuple of docname and line number and nodes::"
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:37
#: ../../sphinx/doc/extdev/logging.rst:59
msgid "**color**"
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:36
msgid "The color of logs.  By default, error level logs are colored as ``\"darkred\"``, critical level ones is not colored, and warning level ones are colored as ``\"red\"``."
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:45
msgid "Logs a message to this logger with the specified level. Basically, the arguments are as with python's logging module."
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:52
msgid "**nonl**"
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:51
msgid "If true, the logger does not fold lines at the end of the log message. The default is ``False``."
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:55
msgid "Where the message emitted.  For more detail, see :meth:`SphinxLoggerAdapter.warning`."
msgstr ""

#: ../../sphinx/doc/extdev/logging.rst:59
msgid "The color of logs.  By default, info and verbose level logs are not colored, and debug level ones are colored as ``\"darkgray\"``."
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.pending_logging:1
msgid "Contextmanager to pend logging all logs temporary."
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.pending_logging:3
#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.prefixed_warnings:3
msgid "For example::"
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.pending_warnings:1
msgid "Contextmanager to pend logging warnings temporary."
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.pending_warnings:3
msgid "Similar to :func:`pending_logging`."
msgstr ""

#: ../../sphinx/sphinx/util/logging.py:docstring of sphinx.util.logging.prefixed_warnings:1
msgid "Prepend prefix to all records for a while."
msgstr ""
