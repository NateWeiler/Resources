# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Arihiro TAKASE, 2018
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2018
# Naofumi SAKAGUCHI <nskgch@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.8.0+\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-25 15:55+0000\n"
"PO-Revision-Date: 2018-02-12 13:47+0000\n"
"Last-Translator: Naofumi SAKAGUCHI <nskgch@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/sphinx-doc/teams/15434/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/ext/doctest.rst:4
msgid ":mod:`sphinx.ext.doctest` -- Test snippets in the documentation"
msgstr ":mod:`sphinx.ext.doctest` -- ドキュメント内の簡易テスト"

#: ../../sphinx/doc/ext/doctest.rst:14
msgid ""
"This extension allows you to test snippets in the documentation in a natural"
" way.  It works by collecting specially-marked up code blocks and running "
"them as doctest tests."
msgstr ""
"このSphinx拡張を使用すると、自然な形で、ドキュメント内で簡単なテストを行えるようになります。特別なマークアップのされたコードブロックを収集して、doctestとしてテストを行います。"

#: ../../sphinx/doc/ext/doctest.rst:18
msgid ""
"Within one document, test code is partitioned in *groups*, where each group "
"consists of:"
msgstr "ひとつのドキュメント内で、テストコードを\\ **グループ**\\ という形で分けることができます。それぞれのグループは以下のものを含みます。"

#: ../../sphinx/doc/ext/doctest.rst:21
msgid "zero or more *setup code* blocks (e.g. importing the module to test)"
msgstr "ゼロ個以上の\\ **セットアップコード**\\ ブロック。テストに必要なモジュールをimportします。"

#: ../../sphinx/doc/ext/doctest.rst:22
msgid "one or more *test* blocks"
msgstr "ひとつ以上の\\ **テスト**\\ ブロック。"

#: ../../sphinx/doc/ext/doctest.rst:24
msgid ""
"When building the docs with the ``doctest`` builder, groups are collected "
"for each document and run one after the other, first executing setup code "
"blocks, then the test blocks in the order they appear in the file."
msgstr ""
"``doctest``\\ "
"ビルダーを使用してドキュメントをビルドすると、それぞれのドキュメントごとに同一グループの要素が集められて次々に実行されます。最初はセットアップコードブロックが実行され、その後はファイルの中で登場する順番にテストブロックが実行されます。"

#: ../../sphinx/doc/ext/doctest.rst:28
msgid "There are two kinds of test blocks:"
msgstr "テストブロックには以下の２種類あります:"

#: ../../sphinx/doc/ext/doctest.rst:30
msgid ""
"*doctest-style* blocks mimic interactive sessions by interleaving Python "
"code (including the interpreter prompt) and output."
msgstr "Pythonコード(含プロンプト)と出力が交互に書かれている、インタラクティブモードに似た\\ **doctestスタイル**\\ のブロック"

#: ../../sphinx/doc/ext/doctest.rst:33
msgid ""
"*code-output-style* blocks consist of an ordinary piece of Python code, and "
"optionally, a piece of output for that code."
msgstr "通常のPythonコードと、出力を1つから構成される、\\ **コード-出力スタイル**\\ のブロック"

#: ../../sphinx/doc/ext/doctest.rst:38
msgid "Directives"
msgstr "ディレクティブ"

#: ../../sphinx/doc/ext/doctest.rst:40
msgid ""
"The *group* argument below is interpreted as follows: if it is empty, the "
"block is assigned to the group named ``default``.  If it is ``*``, the block"
" is assigned to all groups (including the ``default`` group).  Otherwise, it"
" must be a comma-separated list of group names."
msgstr ""
"**グループ**\\ 引数は以下のように解釈されます: もしも何も指定されなかった場合には、\\ ``default``\\ "
"というグループ名が指定されたとみなします。もしも\\ ``*``\\ が指定されると、そのブロックは\\ ``default``\\ "
"を含む、すべてのグループに対して割り当てられたものとみなします。そうでなければ、これ以外の場合はグループ名は、カンマ区切りのリストでなければなりません。"

#: ../../sphinx/doc/ext/doctest.rst:47
msgid ""
"A setup code block.  This code is not shown in the output for other "
"builders, but executed before the doctests of the group(s) it belongs to."
msgstr ""
"セットアップのためのコードブロックです。このコードは他のビルダーを使用したときには出力されませんが、それが所属するグループのdoctestが実行される前に実行されます。"

#: ../../sphinx/doc/ext/doctest.rst:53
msgid ""
"A cleanup code block.  This code is not shown in the output for other "
"builders, but executed after the doctests of the group(s) it belongs to."
msgstr ""
"片付けをするためのコードブロックです。このコードは他のビルダーを使用したときには出力されませんが、それが所属するグループのdoctestが実行された後に実行されます。"

#: ../../sphinx/doc/ext/doctest.rst:61
msgid ""
"A doctest-style code block.  You can use standard :mod:`doctest` flags for "
"controlling how actual output is compared with what you give as output.  The"
" default set of flags is specified by the :confval:`doctest_default_flags` "
"configuration variable."
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:66
msgid "This directive supports three options:"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:68
msgid ""
"``hide``, a flag option, hides the doctest block in other builders.  By "
"default it is shown as a highlighted doctest block."
msgstr ""
"``hide``\\ "
"はフラグオプションです。他のビルダーの使用時に、doctestブロックを隠します。デフォルトでは、ハイライトされたdoctestブロックとして表示されます。"

#: ../../sphinx/doc/ext/doctest.rst:71
msgid ""
"``options``, a string option, can be used to give a comma-separated list of "
"doctest flags that apply to each example in the tests.  (You still can give "
"explicit flags per example, with doctest comments, but they will show up in "
"other builders too.)"
msgstr ""
"``options``\\ "
"は文字列オプションです。それぞれのテストのサンプルに対して、カンマ区切りのdoctestフラグのリストを設定するのに使用します。doctestコメントの中でサンプルごとにフラグを明示することもできますが、他のビルダーをしようすると、そのフラグまでレンダリングされてしまいます。"

#: ../../sphinx/doc/ext/doctest.rst:76
msgid ""
"``pyversion``, a string option, can be used to specify the required Python "
"version for the example to be tested. For instance, in the following case "
"the example will be tested only for Python versions greather than 3.3::"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:83
msgid "The following operands are supported:"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:85
msgid "``~=``: Compatible release clause"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:86
msgid "``==``: Version matching clause"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:87
msgid "``!=``: Version exclusion clause"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:88
msgid "``<=``, ``>=``: Inclusive ordered comparison clause"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:89
msgid "``<``, ``>``: Exclusive ordered comparison clause"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:90
msgid "``===``: Arbitrary equality clause."
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:92
msgid ""
"``pyversion`` option is followed `PEP-440: Version Specifiers "
"<https://www.python.org/dev/peps/pep-0440/#version-specifiers>`__."
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:99
msgid "Supported PEP-440 operands and notations"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:101
msgid ""
"Note that like with standard doctests, you have to use ``<BLANKLINE>`` to "
"signal a blank line in the expected output.  The ``<BLANKLINE>`` is removed "
"when building presentation output (HTML, LaTeX etc.)."
msgstr ""
"標準ライブラリのdoctestでは、予想出力の中に空行を入れたい場合には\\ ``<BLANKLINE>``\\ "
"というキーワードを指定しなければなりませんでした。\\ ``<BLANKLINE>``\\ "
"はHTMLやLaTeXなど、人が読める出力を行うビルドの際には削除されます。"

#: ../../sphinx/doc/ext/doctest.rst:105
msgid "Also, you can give inline doctest options, like in doctest::"
msgstr "doctestの中で書くのと同様に、インラインでdoctestのオプションを指定することもできます::"

#: ../../sphinx/doc/ext/doctest.rst:110
msgid ""
"They will be respected when the test is run, but stripped from presentation "
"output."
msgstr "これらのオプションは、テストの実行時には識別されますが、HTMLなどの出力の際には削除されます。"

#: ../../sphinx/doc/ext/doctest.rst:116
msgid "A code block for a code-output-style test."
msgstr "コード-出力タイプのテストのコードブロックです。"

#: ../../sphinx/doc/ext/doctest.rst:118
msgid "This directive supports one option:"
msgstr "このディレクティブは以下のオプションをサポートしています:"

#: ../../sphinx/doc/ext/doctest.rst:120
msgid ""
"``hide``, a flag option, hides the code block in other builders.  By default"
" it is shown as a highlighted code block."
msgstr ""
"``hide``\\ "
"はフラグオプションです。他のビルダーの使用時に、codeブロックを隠します。デフォルトでは、ハイライトされたcodeブロックとして表示されます。"

#: ../../sphinx/doc/ext/doctest.rst:125
msgid ""
"Code in a ``testcode`` block is always executed all at once, no matter how "
"many statements it contains.  Therefore, output will *not* be generated for "
"bare expressions -- use ``print``.  Example::"
msgstr ""
"``testcode`` ブロックの中のコードは、含まれている文の量に関わらず、すべて、一度だけ実行されます。そのため、単なる式の場合には、出力は "
"**行われません** 。 ``print`` を使用してください。サンプル::"

#: ../../sphinx/doc/ext/doctest.rst:138
msgid ""
"Also, please be aware that since the doctest module does not support mixing "
"regular output and an exception message in the same snippet, this applies to"
" testcode/testoutput as well."
msgstr ""
"doctestモジュールも、通常の出力と、例外メッセージを同じコードスニペット内で混ぜた書き方をサポートしていないように、testcode/testoutputにも同様の制限がある点に注意してください。"

#: ../../sphinx/doc/ext/doctest.rst:145
msgid ""
"The corresponding output, or the exception message, for the last "
":rst:dir:`testcode` block."
msgstr "最後に定義された :rst:dir:`testcode` ブロックに対応する出力, もしくは例外メッセージを定義します。"

#: ../../sphinx/doc/ext/doctest.rst:148
msgid "This directive supports two options:"
msgstr "このディレクティブは以下の２つのオプションをサポートしています:"

#: ../../sphinx/doc/ext/doctest.rst:150
msgid ""
"``hide``, a flag option, hides the output block in other builders.  By "
"default it is shown as a literal block without highlighting."
msgstr ""
"``hide``\\ "
"はフラグオプションです。他のビルダーの使用時に、ブロックを隠します。デフォルトでは、ハイライトせずにリテラルブロックとして表示されます。"

#: ../../sphinx/doc/ext/doctest.rst:153
msgid ""
"``options``, a string option, can be used to give doctest flags (comma-"
"separated) just like in normal doctest blocks."
msgstr ""
"``options``\\ "
"は文字列オプションで、通常のdoctestブロックと同じように、カンマ区切りのdoctestのフラグを設定するのに使用されます。"

#: ../../sphinx/doc/ext/doctest.rst:156
msgid "Example::"
msgstr "サンプル::"

#: ../../sphinx/doc/ext/doctest.rst:169
msgid ""
"The following is an example for the usage of the directives.  The test via "
":rst:dir:`doctest` and the test via :rst:dir:`testcode` and "
":rst:dir:`testoutput` are equivalent. ::"
msgstr ""
"以下のコードはこれらのディレクティブの使用方法のサンプルです。 :rst:dir:`doctest` を使用したテストと、 "
":rst:dir:`testcode` および :rst:dir:`testoutput` の二つで構成されたテストは等価です. ::"

#: ../../sphinx/doc/ext/doctest.rst:203
msgid "Configuration"
msgstr "設定"

#: ../../sphinx/doc/ext/doctest.rst:205
msgid "The doctest extension uses the following configuration values:"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:209
msgid "By default, these options are enabled:"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:211
msgid ""
"``ELLIPSIS``, allowing you to put ellipses in the expected output that match"
" anything in the actual output;"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:213
msgid ""
"``IGNORE_EXCEPTION_DETAIL``, causing everything following the leftmost colon"
" and any module information in the exception name to be ignored;"
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:215
msgid ""
"``DONT_ACCEPT_TRUE_FOR_1``, rejecting \"True\" in the output where \"1\" is "
"given -- the default behavior of accepting this substitution is a relic of "
"pre-Python 2.2 times."
msgstr ""

#: ../../sphinx/doc/ext/doctest.rst:223
msgid ""
"A list of directories that will be added to :data:`sys.path` when the "
"doctest builder is used.  (Make sure it contains absolute paths.)"
msgstr ""
"doctestビルダーが使用されるときに、 :data:`sys.path` "
"に対して追加されるディレクトリのリストです。必ず絶対パスで記述してください。"

#: ../../sphinx/doc/ext/doctest.rst:228
msgid ""
"Python code that is treated like it were put in a ``testsetup`` directive "
"for *every* file that is tested, and for every group.  You can use this to "
"e.g. import modules you will always need in your doctests."
msgstr ""
"Pythonコードを記述します。このコードはテストされる\\ *すべての*\\ ファイルの\\ ``testsetup``\\ "
"ディレクティブに書き込んだのと同じように扱われます。例えば、doctest時にいつでも必要となるモジュールをimportするといった用途に使用できます。"

#: ../../sphinx/doc/ext/doctest.rst:236
msgid ""
"Python code that is treated like it were put in a ``testcleanup`` directive "
"for *every* file that is tested, and for every group.  You can use this to "
"e.g. remove any temporary files that the tests leave behind."
msgstr ""
"すべてのテストグループがテストを終了したあとに呼ばれる、 ``testcleanup`` ディレクティブを、*すべての*\\ "
"ファイルに作ります。この設定にはPythonのコードを書きます。すべてのテンポラリファイルを削除などの使い方ができます。"

#: ../../sphinx/doc/ext/doctest.rst:244
msgid ""
"If this is a nonempty string (the default is ``'default'``), standard reST "
"doctest blocks will be tested too.  They will be assigned to the group name "
"given."
msgstr ""
"この値に空でない文字列(デフォルトは\\ "
"``'default'``)が設定されると、標準のreSTのdoctestブロックもテストされるようになります。それらのテストには、ここで与えられたグループ名が設定されます。"

#: ../../sphinx/doc/ext/doctest.rst:248
msgid ""
"reST doctest blocks are simply doctests put into a paragraph of their own, "
"like so::"
msgstr "reSTのdoctestブロックは、reSTの中のパラグラフとして単純にdoctestが置かれます::"

#: ../../sphinx/doc/ext/doctest.rst:258
msgid ""
"(Note that no special ``::`` is used to introduce a doctest block; docutils "
"recognizes them from the leading ``>>>``.  Also, no additional indentation "
"is used, though it doesn't hurt.)"
msgstr ""
"reSTの場合は、doctestブロックを表現するのに特別な\\ ``::``\\ は使用されません。docutilsは\\ ``>>>``\\ "
"から始まる行を識別します。そのため、doctestのために追加でインデントを設定する必要はありません。"

#: ../../sphinx/doc/ext/doctest.rst:262
msgid ""
"If this value is left at its default value, the above snippet is interpreted"
" by the doctest builder exactly like the following::"
msgstr ""
"この設定値がデフォルトのままであったとすると、上記のコード片は、下記のように書いた場合と同じようにdoctestビルダーから解釈されます::"

#: ../../sphinx/doc/ext/doctest.rst:274
msgid ""
"This feature makes it easy for you to test doctests in docstrings included "
"with the :mod:`~sphinx.ext.autodoc` extension without marking them up with a"
" special directive."
msgstr ""
"この機能があるおかげで :mod:`~sphinx.ext.autodoc` "
"拡張を使用して取り込んだdocstring中のdoctestを簡単に実行できます。特別なディレクティブでマークアップする必要はありません。"

#: ../../sphinx/doc/ext/doctest.rst:278
msgid ""
"Note though that you can't have blank lines in reST doctest blocks.  They "
"will be interpreted as one block ending and another one starting.  Also, "
"removal of ``<BLANKLINE>`` and ``# doctest:`` options only works in "
":rst:dir:`doctest` blocks, though you may set :confval:`trim_doctest_flags` "
"to achieve that in all code blocks with Python console content."
msgstr ""
"しかし、 reST doctest "
"ブロックには空行を含めることができないということに注意してください。それらは一つのブロックの終わりと別のブロックの開始として解釈されるでしょう。また "
"``<BLANKLINE>`` と ``# doctest:`` オプションの除去は :rst:dir:`doctest` "
"ブロックの中でのみ機能します。ただし、 :confval:`trim_doctest_flags` を設定して、 Python "
"コンソールの内容を含むすべてのコードブロックでもそれを実現できます。"
