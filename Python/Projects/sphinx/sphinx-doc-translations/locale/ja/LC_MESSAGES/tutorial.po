# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Yuta Hono <yuta.hono@gmail.com>, 2018
# rd8 <rd8british@gmail.com>, 2018
# 6634a9665050dc652de4c3bd1bdfeb2a_20af5ce <cbb33621881b2bb725baed259705eedc_400751>, 2018
# SHIMIZU Taku <shimizu.taku@gmail.com>, 2018
# tomo, 2018
# Arihiro TAKASE, 2018
# shirou - しろう <shirou.faw@gmail.com>, 2018
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2018
# Naofumi SAKAGUCHI <nskgch@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.8.0+/3a100ae\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-03-01 15:04+0000\n"
"PO-Revision-Date: 2018-02-12 13:47+0000\n"
"Last-Translator: Naofumi SAKAGUCHI <nskgch@gmail.com>, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/sphinx-doc/teams/15434/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/tutorial.rst:4
msgid "First Steps with Sphinx"
msgstr "Sphinxの最初の一歩"

#: ../../sphinx/doc/tutorial.rst:6
msgid ""
"This document is meant to give a tutorial-like overview of all common tasks "
"while using Sphinx."
msgstr "このドキュメントでは、チュートリアル形式で、Sphinxを使ってよく行うタスクについての概要を紹介していきます。"

#: ../../sphinx/doc/tutorial.rst:9
msgid ""
"The green arrows designate \"more info\" links leading to advanced sections "
"about the described task."
msgstr "緑色の矢印は、説明しているタスクについての発展的な内容がリンク先に掲載されていることを示しています。"

#: ../../sphinx/doc/tutorial.rst:14
msgid "Install Sphinx"
msgstr "Sphinxのインストール"

#: ../../sphinx/doc/tutorial.rst:16
msgid ""
"Install Sphinx, either from a distribution package or from `PyPI "
"<https://pypi.python.org/pypi/Sphinx>`_ with ::"
msgstr ""
"Sphinxをインストールするには、ディストリビューションパッケージから、もしくは `PyPI "
"<https://pypi.python.org/pypi/Sphinx>`_ から可能です。"

#: ../../sphinx/doc/tutorial.rst:23
msgid "Setting up the documentation sources"
msgstr "ドキュメントのソースの準備"

#: ../../sphinx/doc/tutorial.rst:25
msgid ""
"The root directory of a Sphinx collection of reStructuredText document "
"sources is called the :term:`source directory`.  This directory also "
"contains the Sphinx configuration file :file:`conf.py`, where you can "
"configure all aspects of how Sphinx reads your sources and builds your "
"documentation.  [#]_"
msgstr ""
"reStructuredText ドキュメントソースのSphinx ルートディレクトリは :term:`ソースディレクトリ` "
"と呼びます。また、このディレクトリはSphinxの設定ファイル :file:`conf.py` "
"を含んでおり、Sphinxによるソースの解釈、ドキュメントのビルドが可能となります。 [#]_ "

#: ../../sphinx/doc/tutorial.rst:30
msgid ""
"Sphinx comes with a script called :program:`sphinx-quickstart` that sets up "
"a source directory and creates a default :file:`conf.py` with the most "
"useful configuration values from a few questions it asks you.  Just run ::"
msgstr ""
"Sphinxの最初の第一歩は :program:`sphinx-quickstart` "
"と呼ばれるプログラムを実行し、ソースディレクトリを作成して、いくつかの質問に答えながら、一般的な設定が既に書かれているデフォルトの "
":file:`conf.py` を生成するところから始まります。次のようにタイプします::"

#: ../../sphinx/doc/tutorial.rst:36
msgid ""
"and answer its questions.  (Be sure to say yes to the \"autodoc\" "
"extension.)"
msgstr "いくつかの質問が行われます。ここでは最低限\"autodoc\"拡張に関する質問だけはYESと回答しておいてください。"

#: ../../sphinx/doc/tutorial.rst:38
msgid ""
"There is also an automatic \"API documentation\" generator called :program"
":`sphinx-apidoc`; see :doc:`/man/sphinx-apidoc` for details."
msgstr ""
":program:`sphinx-apidoc`; と呼ばれる、自動\"API ドキュメンテーション\" "
"生成機能もあります。詳しくは、:doc:`/man/sphinx-apidoc`を参照してください。"

#: ../../sphinx/doc/tutorial.rst:43
msgid "Defining document structure"
msgstr "ドキュメント構造の定義"

#: ../../sphinx/doc/tutorial.rst:45
msgid ""
"Let's assume you've run :program:`sphinx-quickstart`.  It created a source "
"directory with :file:`conf.py` and a master document, :file:`index.rst` (if "
"you accepted the defaults).  The main function of the :term:`master "
"document` is to serve as a welcome page, and to contain the root of the "
"\"table of contents tree\" (or *toctree*).  This is one of the main things "
"that Sphinx adds to reStructuredText, a way to connect multiple files to a "
"single hierarchy of documents."
msgstr ""
"もう :program:`sphinx-quickstart` は実行しましたね？ :file:`conf.py` と、マスタードキュメントの "
":file:`index.rst` (もしデフォルトで作成した場合)が含まれる、ソースディレクトリができています。 :term:`マスタードキュメント`"
" の主な役割は、トップページを提供し、TOCツリー(索引のツリー、もしくは "
"*toctree*)のルートが置かれています。このTOCツリーというのは、SphinxがreStructuredTextに追加した主要な要素の一つで、複数のファイルを単一の階層構造に結びつける役割を持っています。"

#: ../../sphinx/doc/tutorial.rst:55
msgid ""
"``toctree`` is a reStructuredText :dfn:`directive`, a very versatile piece "
"of markup.  Directives can have arguments, options and content."
msgstr ""
"``toctree`` はreStructuredText :dfn:`ディレクティブ` "
"です。ディレクティブというのは、さまざまな用途で使用される、マークアップの要素です。ディレクティブは引数、オプション、コンテンツを持つことができます。"

#: ../../sphinx/doc/tutorial.rst:58
msgid ""
"*Arguments* are given directly after the double colon following the "
"directive's name.  Each directive decides whether it can have arguments, and"
" how many."
msgstr ""
"*引数* "
"はディレクティブ名の末尾の2つのコロンの後ろに書かれます。それぞれのディレクティブごとに、引数を持つか、持つ場合はいくつか、というのが決まっています。"

#: ../../sphinx/doc/tutorial.rst:62
msgid ""
"*Options* are given after the arguments, in form of a \"field list\".  The "
"``maxdepth`` is such an option for the ``toctree`` directive."
msgstr ""
"*オプション* は引数の後ろに、フィールドリストの形式で書かれます。例えば、 ``toctree`` ディレクティブにおいては、 "
"``maxdepth`` というのがオプションにあたります。"

#: ../../sphinx/doc/tutorial.rst:65
msgid ""
"*Content* follows the options or arguments after a blank line.  Each "
"directive decides whether to allow content, and what to do with it."
msgstr ""
"*コンテンツ* "
"はオプションのや引数から空行を一行空けた、その後の内容になります。ディレクティブごとにコンテンツを書けるかどうか、何を書くのか、というのが決まっています。"

#: ../../sphinx/doc/tutorial.rst:68
msgid ""
"A common gotcha with directives is that **the first line of the content must"
" be indented to the same level as the options are**."
msgstr "ディレクティブの一般的な書き方は、 **コンテンツの最初の行は、オプションと同じ高さに書く** というものです。"

#: ../../sphinx/doc/tutorial.rst:72
msgid "The toctree directive initially is empty, and looks like this::"
msgstr "最初に生成されたときは、toctreeディレクティブは次のようになっています::"

#: ../../sphinx/doc/tutorial.rst:77
msgid "You add documents listing them in the *content* of the directive::"
msgstr "ディレクティブの *コンテンツ* のところにドキュメントのリストを追加します::"

#: ../../sphinx/doc/tutorial.rst:86
msgid ""
"This is exactly how the toctree for this documentation looks.  The documents"
" to include are given as :term:`document name`\\ s, which in short means "
"that you leave off the file name extension and use slashes as directory "
"separators."
msgstr ""
"これは、このドキュメントの目次がどのように見えるのか、というのとまったく同じです。ここに含めるドキュメントは、 :term:`ドキュメント名` "
"を使って追加します。簡単に説明すると、拡張子を取り、ディレクトリの記号にスラッシュ(/)を利用した物です。"

#: ../../sphinx/doc/tutorial.rst:90
msgid ""
"|more| Read more about :ref:`the toctree directive <toctree-directive>`."
msgstr ""
"|more| さらに詳しい情報については、 :ref:`toctreeディレクティブ <toctree-directive>` をご覧下さい。"

#: ../../sphinx/doc/tutorial.rst:92
msgid ""
"You can now create the files you listed in the toctree and add content, and "
"their section titles will be inserted (up to the \"maxdepth\" level) at the "
"place where the toctree directive is placed.  Also, Sphinx now knows about "
"the order and hierarchy of your documents.  (They may contain ``toctree`` "
"directives themselves, which means you can create deeply nested hierarchies "
"if necessary.)"
msgstr ""
"次に、toctreeに追加したファイルを作成し、内容を書くことができるようになりました。\"maxdepth\"で指定された階層まで、toctreeディレクティブの書かれた場所に、リストされたドキュメントのセクションタイトルとリンクが挿入され、目次ができあがります。Sphinxはこのディレクティブを通じて、ドキュメントの階層と順番を知ります。子供の文章の中にも"
" ``toctree`` ディレクティブを書くことができるため、必要であれば深い階層構造を作ることもできます。"

#: ../../sphinx/doc/tutorial.rst:100
msgid "Adding content"
msgstr "コンテンツの追加"

#: ../../sphinx/doc/tutorial.rst:102
msgid ""
"In Sphinx source files, you can use most features of standard "
"reStructuredText. There are also several features added by Sphinx.  For "
"example, you can add cross-file references in a portable way (which works "
"for all output types) using the :rst:role:`ref` role."
msgstr ""
"Sphinxのソースファイルの中では、標準のreStructuredTextの機能をほとんどそのまま利用できます。また、Sphinxによっていくつかの機能が追加されています。例えば、"
" :rst:role:`ref` を使用した、移植可能（すべての出力形式で動作する)な相互ファイル参照も追加できます。"

#: ../../sphinx/doc/tutorial.rst:107
msgid ""
"For an example, if you are viewing the HTML version you can look at the "
"source for this document -- use the \"Show Source\" link in the sidebar."
msgstr ""
"例えば、HTMLバージョンの出力を見ているとすると、サイドバーにある\"ソースを見る\"というリンクを使用すると、ドキュメントのソースを見ることができます。"

#: ../../sphinx/doc/tutorial.rst:110
msgid ""
"|more| See :ref:`rst-primer` for a more in-depth introduction to "
"reStructuredText and :ref:`sphinxmarkup` for a full list of markup added by "
"Sphinx."
msgstr ""
"|more| reStructuredTextのより詳しい説明については、 :ref:`rst-primer` "
"をご覧下さい。また、Sphinxが追加したマークアップの完全なリストは :ref:`sphinxmarkup` を見ると書かれています。"

#: ../../sphinx/doc/tutorial.rst:116
msgid "Running the build"
msgstr "ビルドの実行"

#: ../../sphinx/doc/tutorial.rst:118
msgid ""
"Now that you have added some files and content, let's make a first build of "
"the docs.  A build is started with the :program:`sphinx-build` program, "
"called like this::"
msgstr ""
"今、いくつかのファイルとコンテンツを追加したとしましょう。それではドキュメントをビルドしてみましょう。ビルドするには :program:`sphinx-"
"build` プログラムを使用します。次のように実行します::"

#: ../../sphinx/doc/tutorial.rst:124
msgid ""
"where *sourcedir* is the :term:`source directory`, and *builddir* is the "
"directory in which you want to place the built documentation. The "
":option:`-b <sphinx-build -b>` option selects a builder; in this example "
"Sphinx will build HTML files."
msgstr ""
"**ソースディレクトリ** は :term:`ソースディレクトリ` を、 **ビルドディレクトリ** "
"はビルドされたドキュメントが置かれるディレクトリを意味します。 :option:`-b <sphinx-build -b>` "
"オプションを使用すると、ビルダーを選択することができます。このサンプルではHTMLファイルを出力するビルダーを選択しています。"

#: ../../sphinx/doc/tutorial.rst:129
msgid ""
"|more| Refer to the :program:`sphinx-build man page <sphinx-build>` for all "
"options that :program:`sphinx-build` supports."
msgstr ""
"|more| :program:`sphinx-build` サポートのすべてのオプションについては.:program:`sphinx-build "
"man ページ <sphinx-build>`を参照してください。"

#: ../../sphinx/doc/tutorial.rst:132
msgid ""
"However, :program:`sphinx-quickstart` script creates a :file:`Makefile` and "
"a :file:`make.bat` which make life even easier for you:  with them you only "
"need to run ::"
msgstr ""
"しかし、 :program:`sphinx-quickstart` スクリプトは :file:`Makefile` と :file:`make.bat`"
" を生成するため、作業はもっと簡単です。次のように実行するだけで、選択したビルドディレクトリの中にHTMLをビルドできます::"

#: ../../sphinx/doc/tutorial.rst:138
msgid ""
"to build HTML docs in the build directory you chose.  Execute ``make`` "
"without an argument to see which targets are available."
msgstr "選択できるターゲットを見るためには、オプションを指定しないで ``make`` を実行してみてください。"

#: ../../sphinx/doc/tutorial.rst:141
msgid "How do I generate PDF documents?"
msgstr "PDFドキュメントを生成するには？"

#: ../../sphinx/doc/tutorial.rst:143
msgid ""
"``make latexpdf`` runs the :mod:`LaTeX builder "
"<sphinx.builders.latex.LaTeXBuilder>` and readily invokes the pdfTeX "
"toolchain for you."
msgstr ""
"``make latexpdf`` は  :mod:`LaTeX ビルダー <sphinx.builders.latex.LaTeXBuilder>` "
"を実行します。その後ユーザ自身がすぐに実行できるようなpdfTexツールチェインを呼び出しす。"

#: ../../sphinx/doc/tutorial.rst:149
msgid "Documenting objects"
msgstr "オブジェクトのドキュメントを書く"

#: ../../sphinx/doc/tutorial.rst:151
msgid ""
"One of Sphinx's main objectives is easy documentation of :dfn:`objects` (in "
"a very general sense) in any :dfn:`domain`.  A domain is a collection of "
"object types that belong together, complete with markup to create and "
"reference descriptions of these objects."
msgstr ""
"Sphinxの主な目的の一つが、簡単に :dfn:`ドメイン` に属する :dfn:`オブジェクト` "
"(非常に一般的な意味です)のドキュメントを書けるようにする、というものです。ドメインというのはお互いに関連する、オブジェクトの型を集めた物です。オブジェクトの説明を作成したり、参照したりできます。"

#: ../../sphinx/doc/tutorial.rst:156
msgid ""
"The most prominent domain is the Python domain. For example, to document "
"Python's built-in function ``enumerate()``, you would add this to one of "
"your source files::"
msgstr ""
"最も著名なドメインPython domainです。例えば、Pythonのビルトイン関数の "
"``enumerate()``の度ドキュメントを書けば、ご自身のソースファイルにそれが追加されます。"

#: ../../sphinx/doc/tutorial.rst:165
msgid "This is rendered like this:"
msgstr "これは次のようにレンダリングされます:"

#: ../../sphinx/doc/tutorial.rst:169
msgid ""
"Return an iterator that yields tuples of an index and an item of the "
"*sequence*. (And so on.)"
msgstr "*sequence* の要素と、そのインデックスのタプルを生成するイテレータを返します(....など)"

#: ../../sphinx/doc/tutorial.rst:172
msgid ""
"The argument of the directive is the :dfn:`signature` of the object you "
"describe, the content is the documentation for it.  Multiple signatures can "
"be given, each in its own line."
msgstr ""
"ディレクティブの引数は、説明したいオブジェクトの :dfn:`signature` "
"です。コンテンツには、それに対するドキュメントそのものを書きます。複数のシグネチャを、1行ごとに書くこともできます。"

#: ../../sphinx/doc/tutorial.rst:176
msgid ""
"The Python domain also happens to be the default domain, so you don't need "
"to prefix the markup with the domain name::"
msgstr ""
"Pythonドメインはデフォルトのドメインとなるので、それに関する設定を変更していない限りは、次のようにドメインを指定するプリフィックスを付けずに書いても、同じ結果となります::"

#: ../../sphinx/doc/tutorial.rst:183
msgid ""
"does the same job if you keep the default setting for the default domain."
msgstr "もしデフォルトのドメインに対してデフォルトの設定を使い続けたい場合は、同じ事をしてください。"

#: ../../sphinx/doc/tutorial.rst:185
msgid ""
"There are several more directives for documenting other types of Python "
"objects, for example :rst:dir:`py:class` or :rst:dir:`py:method`.  There is "
"also a cross-referencing :dfn:`role` for each of these object types.  This "
"markup will create a link to the documentation of ``enumerate()``::"
msgstr ""
"これ以外にも、 :rst:dir:`py:class`, :rst:dir:`py:method` "
"など、Pythonの他のオブジェクトの種類のドキュメントを書くためのディレクティブがいくつも定義されています。また、これらのオブジェクトの型ごとに、相互参照を行うための"
" :dfn:`role` も定義されています。このマークアップを記述すると、 ``enumerate()`` のドキュメントへのリンクが作成されます::"

#: ../../sphinx/doc/tutorial.rst:192
msgid "And here is the proof: A link to :func:`enumerate`."
msgstr "実際に試してみたのがこれです: :func:`enumerate`"

#: ../../sphinx/doc/tutorial.rst:194
msgid ""
"Again, the ``py:`` can be left out if the Python domain is the default one."
"  It doesn't matter which file contains the actual documentation for "
"``enumerate()``; Sphinx will find it and create a link to it."
msgstr ""
"繰り返しになりますが、Pythonのドメインがデフォルトで設定されている場合には ``py:`` という接頭辞を外して書くこともできます。また、その "
"``enumerate()`` "
"の実際のドキュメントが、どのファイルに書かれているのか、ということを気にする必要はありません。Sphinxが自動で見つけてリンクを張ってくれます。"

#: ../../sphinx/doc/tutorial.rst:198
msgid ""
"Each domain will have special rules for how the signatures can look like, "
"and make the formatted output look pretty, or add specific features like "
"links to parameter types, e.g. in the C/C++ domains."
msgstr ""
"ドメインごとに、シグニチャをどのように見せることができるのか、というルールは変わってくるでしょう。フォーマットをどのようにきれいに整えたり、C/C++ドメインのように引数の型にリンクを張るなどの言語ごとの特別な機能が追加されることもあります。"

#: ../../sphinx/doc/tutorial.rst:202
msgid ""
"|more| See :ref:`domains` for all the available domains and their "
"directives/roles."
msgstr ""
"|more| 使用できるすべてのドメインと、それらのディレクティブ/ロールについて知りたい場合には、 :ref:`domains` を参照してください。"

#: ../../sphinx/doc/tutorial.rst:207
msgid "Basic configuration"
msgstr "基本設定"

#: ../../sphinx/doc/tutorial.rst:209
msgid ""
"Earlier we mentioned that the :file:`conf.py` file controls how Sphinx "
"processes your documents.  In that file, which is executed as a Python "
"source file, you assign configuration values.  For advanced users: since it "
"is executed by Sphinx, you can do non-trivial tasks in it, like extending "
":data:`sys.path` or importing a module to find out the version you are "
"documenting."
msgstr ""
"最初の方で、Sphinxがドキュメントをどのように処理するのかを制御する、 :file:`conf.py` "
"というファイルがあるということについては軽く紹介しました。このファイルはPythonのソースファイルとして実行され、中に設定値を記述できます。上級のユーザは、Sphinxが処理をする際に、"
" :data:`sys.path` "
"を拡張したり、ドキュメントの記述するバージョン番号を取得してくるために、製品コードをインポートして情報を得るような、いくつかの処理を実装するでしょう。"

#: ../../sphinx/doc/tutorial.rst:215
msgid ""
"The config values that you probably want to change are already put into the "
":file:`conf.py` by :program:`sphinx-quickstart` and initially commented out "
"(with standard Python syntax: a ``#`` comments the rest of the line).  To "
"change the default value, remove the hash sign and modify the value.  To "
"customize a config value that is not automatically added by :program"
":`sphinx-quickstart`, just add an additional assignment."
msgstr ""
"おそらく多くのユーザが変更したがると思われるような設定値については、 :program:`sphinx-quickstart` を通じて、 "
":file:`conf.py` に既に書き込まれ、最初はコメントアウトされた状態になっています(Pythonの標準的な文法で、 ``#`` "
"を書くと行の残りの内容がコメントになる)。デフォルト値を変更する場合には、 ``#`` 記号を削除して、値を変更してください。 :program"
":`sphinx-quickstart` が自動的に追加しない設定値については、設定行を追加してください。"

#: ../../sphinx/doc/tutorial.rst:222
msgid ""
"Keep in mind that the file uses Python syntax for strings, numbers, lists "
"and so on.  The file is saved in UTF-8 by default, as indicated by the "
"encoding declaration in the first line.  If you use non-ASCII characters in "
"any string value, you need to use Python Unicode strings (like ``project = "
"u'Exposé'``)."
msgstr ""
"Pythonの文字列、数値、リストなどの文法を利用して設定ファイルを書く必要があります。設定ファイルは、最初の行のエンコーディング宣言の通り"
"、デフォルトではUTF-8形式で保存されます。文字列の値として、非アスキー文字をしようしたい場合には、Pythonのユニコード文字列(例: "
"``project = u'日本語版Expose'``)を使用する必要があります。"

#: ../../sphinx/doc/tutorial.rst:227
msgid ""
"|more| See :ref:`build-config` for documentation of all available config "
"values."
msgstr "|more| すべての使用可能な設定値については、 :ref:`build-config` のドキュメントを参照してください。"

#: ../../sphinx/doc/tutorial.rst:231
msgid "Autodoc"
msgstr "Autodoc"

#: ../../sphinx/doc/tutorial.rst:233
msgid ""
"When documenting Python code, it is common to put a lot of documentation in "
"the source files, in documentation strings.  Sphinx supports the inclusion "
"of docstrings from your modules with an :dfn:`extension` (an extension is a "
"Python module that provides additional features for Sphinx projects) called "
"\"autodoc\"."
msgstr ""
"もしもPythonで書かれたコードのドキュメントを書こうとしている場合には、docstring形式でソースファイル中に既に多くのドキュメントを書いているでしょう。Sphinxは"
" \"autodoc\" という :dfn:`拡張機能` "
"を利用することでソースファイルからdocstringを抽出してくて文章に取り込むというのをサポートしています。拡張機能はPythonで書かれたモジュールで、Sphinxのプロジェクトに様々な機能を付加します。"

#: ../../sphinx/doc/tutorial.rst:238
msgid ""
"In order to use autodoc, you need to activate it in :file:`conf.py` by "
"putting the string ``'sphinx.ext.autodoc'`` into the list assigned to the "
":confval:`extensions` config value.  Then, you have a few additional "
"directives at your disposal."
msgstr ""
"autodocを使用するためには、 :file:`conf.py` の :confval:`extensions` という設定値に "
"``'sphinx.ext.autodoc'`` "
"という文字列を追加して、この機能を有効化する必要があります。追加すると、いくつかのディレクティブがプロジェクトに追加されます。"

#: ../../sphinx/doc/tutorial.rst:243
msgid ""
"For example, to document the function ``io.open()``, reading its signature "
"and docstring from the source file, you'd write this::"
msgstr ""
"例えば、 ``io.open()`` "
"という関数に関するドキュメントであれば、次のように記述すると、シグネチャやdocstring情報はソースファイルから読み取ります::"

#: ../../sphinx/doc/tutorial.rst:248
msgid ""
"You can also document whole classes or even modules automatically, using "
"member options for the auto directives, like ::"
msgstr ""
"autodoc関連のディレクティブのmembersオプションを利用すると、クラスやモジュールの要素のドキュメントを自動的に作成することもできます::"

#: ../../sphinx/doc/tutorial.rst:254
msgid ""
"autodoc needs to import your modules in order to extract the docstrings. "
"Therefore, you must add the appropriate path to :py:data:`sys.path` in your "
":file:`conf.py`."
msgstr ""
"autodocはモジュールをインポートしてdocstringの情報を収集する必要があります。そのため、ドキュメント対象のモジュールを読み込むために、 "
":file:`conf.py` の中で、適切なパスを :py:data:`sys.path` に追加する必要があります。"

#: ../../sphinx/doc/tutorial.rst:260
msgid ""
":mod:`~sphinx.ext.autodoc` **imports** the modules to be documented.  If any"
" modules have side effects on import, these will be executed by ``autodoc`` "
"when ``sphinx-build`` is run."
msgstr ""
":mod:`~sphinx.ext.autodoc` はドキュメンテーションされるモジュールを **インポート** します.  "
"もしインポートによる副作用があれば、 ``sphinx-build`` が実行されるとき ``autodoc`` により実行されます。"

#: ../../sphinx/doc/tutorial.rst:264
msgid ""
"If you document scripts (as opposed to library modules), make sure their "
"main routine is protected by a ``if __name__ == '__main__'`` condition."
msgstr ""
"もしあなたが  (ライブラリモジュールではなく)  スクリプトをドキュメント化したいのであれば、スクリプトのメインルーチンが ``if __name__"
" == '__main__'`` 条件により保護されていることを確認して下さい。"

#: ../../sphinx/doc/tutorial.rst:267
msgid ""
"|more| See :mod:`sphinx.ext.autodoc` for the complete description of the "
"features of autodoc."
msgstr "|more| autodoc機能の完全な説明は、 :mod:`sphinx.ext.autodoc` の説明を参照してください。"

#: ../../sphinx/doc/tutorial.rst:271
msgid "Intersphinx"
msgstr "Intersphinx"

#: ../../sphinx/doc/tutorial.rst:273
msgid ""
"Many Sphinx documents including the `Python documentation`_ are published on"
" the internet.  When you want to make links to such documents from your "
"documentation, you can do it with :mod:`sphinx.ext.intersphinx`."
msgstr ""
"`Python documentation`_ "
"をはじめとして、Sphinxで作られたドキュメントが多数インターネット上で公開されています。あなたのドキュメントからそれらのドキュメントへのリンクを作成したい時は"
" :mod:`sphinx.ext.intersphinx` が利用できます。"

#: ../../sphinx/doc/tutorial.rst:279
msgid ""
"In order to use intersphinx, you need to activate it in :file:`conf.py` by "
"putting the string ``'sphinx.ext.intersphinx'`` into the "
":confval:`extensions` list and set up the :confval:`intersphinx_mapping` "
"config value."
msgstr ""
"intersphinxを使用するためには、 :file:`conf.py` の :confval:`extensions` という設定値に "
"``'sphinx.ext.intersphinx'`` という文字列を追加して、この機能を有効化した後、 "
":confval:`intersphinx_mapping` という設定値を設定する必要があります。"

#: ../../sphinx/doc/tutorial.rst:283
msgid ""
"For example, to link to ``io.open()`` in the Python library manual, you need"
" to setup your :confval:`intersphinx_mapping` like::"
msgstr ""
"例えば、 Pythonライブラリマニュアルに含まれる ``io.open()`` へリンクするには、次のように "
":confval:`intersphinx_mapping` をセットアップする必要があります:: "

#: ../../sphinx/doc/tutorial.rst:288
msgid ""
"And now, you can write a cross-reference like ``:py:func:`io.open```.  Any "
"cross-reference that has no matching target in the current documentation "
"set, will be looked up in the documentation sets configured in "
":confval:`intersphinx_mapping` (this needs access to the URL in order to "
"download the list of valid targets).  Intersphinx also works for some other "
":ref:`domains' <domains>` roles including ``:ref:``, however it doesn't work"
" for ``:doc:`` as that is non-domain role."
msgstr ""
"これで  ``:py:func:`io.open``` "
"のようなクロスリファレンスを記述可能になりました。現在のドキュメントの中に一致するターゲットが見つからないクロスリファレンスは、 "
":confval:`intersphinx_mapping` で指定したドキュメントからターゲットを探し、リンクされます "
"(有効なターゲットのリストをダウンロードするため、設定で指定されたURLへアクセスします)。Intersphinxは ``:ref:`` を含む他の "
":ref:`domains' <domains>` でも同様に動作します、しかしドメインロールでない  ``:doc:``  では動作しません。"

#: ../../sphinx/doc/tutorial.rst:296
msgid ""
"|more| See :mod:`sphinx.ext.intersphinx` for the complete description of the"
" features of intersphinx."
msgstr ""
"|more| intersphinx機能の完全な説明は、 :mod:`sphinx.ext.intersphinx` の説明を参照してください。"

#: ../../sphinx/doc/tutorial.rst:301
msgid "More topics to be covered"
msgstr "さらに説明すべきトピック"

#: ../../sphinx/doc/tutorial.rst:303
msgid ":doc:`Other extensions <extensions>`:"
msgstr ":doc:`他の拡張 <extensions>`:"

#: ../../sphinx/doc/tutorial.rst:305
msgid ":doc:`ext/math`,"
msgstr ":doc:`ext/math`"

#: ../../sphinx/doc/tutorial.rst:306
msgid ":doc:`ext/viewcode`,"
msgstr ":doc:`ext/viewcode`"

#: ../../sphinx/doc/tutorial.rst:307
msgid ":doc:`ext/doctest`,"
msgstr ":doc:`ext/doctest`"

#: ../../sphinx/doc/tutorial.rst:308
msgid "..."
msgstr "..."

#: ../../sphinx/doc/tutorial.rst:309
msgid "Static files"
msgstr "静的ファイル"

#: ../../sphinx/doc/tutorial.rst:310
msgid ":doc:`Selecting a theme <theming>`"
msgstr ":doc:`テーマの選択 <theming>`"

#: ../../sphinx/doc/tutorial.rst:311
msgid ":doc:`setuptools`"
msgstr ":doc:`setuptools`"

#: ../../sphinx/doc/tutorial.rst:312
msgid ":ref:`Templating <templating>`"
msgstr ":ref:`テンプレート <templating>`"

#: ../../sphinx/doc/tutorial.rst:313
msgid "Using extensions"
msgstr "拡張機能の使用方法"

#: ../../sphinx/doc/tutorial.rst:314
msgid ":ref:`Writing extensions <dev-extensions>`"
msgstr ":ref:`拡張の書き方 <dev-extensions>`"

#: ../../sphinx/doc/tutorial.rst:318
msgid "Footnotes"
msgstr "脚注"

#: ../../sphinx/doc/tutorial.rst:319
msgid ""
"This is the usual layout.  However, :file:`conf.py` can also live in another"
" directory, the :term:`configuration directory`.  Refer to the :program"
":`sphinx-build man page <sphinx-build>` for more information."
msgstr ""
"これは一般的なレイアウトです。しかし、 :file:`conf.py` はもう一つのディレクトリ、 :term:`configuration "
"directory`にも存在します。詳しい情報は、 :program:`sphinx-build man ページ <sphinx-build>` "
"を参照してください。"
