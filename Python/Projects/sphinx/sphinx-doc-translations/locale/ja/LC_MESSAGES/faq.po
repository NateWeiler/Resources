# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2020, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Takayuki SHIMIZUKAWA <shimizukawa@gmail.com>, 2018
# Tetsuo Koyama <tkoyama010@gmail.com>, 2020
# Naofumi SAKAGUCHI <nskgch@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 4.0.0+/d9280e253\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-13 23:32+0000\n"
"PO-Revision-Date: 2018-02-12 13:46+0000\n"
"Last-Translator: Naofumi SAKAGUCHI <nskgch@gmail.com>, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/sphinx-doc/teams/15434/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../sphinx/doc/faq.rst:4
msgid "Sphinx FAQ"
msgstr "Sphinx FAQ"

#: ../../sphinx/doc/faq.rst:6
msgid ""
"This is a list of Frequently Asked Questions about Sphinx.  Feel free to "
"suggest new entries!"
msgstr "このセクションでは、Sphinxについてよく聞かれる質問とその答えについてまとめています。新しいセクションを気軽に追加してください！"

#: ../../sphinx/doc/faq.rst:10
msgid "How do I..."
msgstr "どのようにすれば..."

#: ../../sphinx/doc/faq.rst:16
msgid "... create PDF files without LaTeX?"
msgstr "... LaTeXなしでPDFファイルを作成できますか？"

#: ../../sphinx/doc/faq.rst:13
msgid ""
"`rinohtype`_ provides a PDF builder that can be used as a drop-in "
"replacement for the LaTeX builder."
msgstr "`rinohtype`_ はLaTeXビルダーの完全互換品として扱えるPDFビルダーを提供しています．"

#: ../../sphinx/doc/faq.rst:20
msgid "... get section numbers?"
msgstr "... セクション番号を設定できますか？"

#: ../../sphinx/doc/faq.rst:19
msgid ""
"They are automatic in LaTeX output; for HTML, give a ``:numbered:`` option "
"to the :rst:dir:`toctree` directive where you want to start numbering."
msgstr ""
"LaTeX出力では自動的に設定されます。HTML出力では、 :rst:dir:`toctree` "
"ディレクティブに対して、ナンバリングをしたい位置に対して ``:numbered:`` オプションを付けると、設定できます。"

#: ../../sphinx/doc/faq.rst:23
msgid "... customize the look of the built HTML files?"
msgstr "... ビルドするHTMLファイルの見た目をカスタマイズできますか？"

#: ../../sphinx/doc/faq.rst:23
msgid "Use themes, see :doc:`/usage/theming`."
msgstr ":doc:`/usage/theming` を読んで、テーマを利用すると、カスタマイズできます。"

#: ../../sphinx/doc/faq.rst:26
msgid "... add global substitutions or includes?"
msgstr "... すべてのドキュメントで置換を行ったり、インクルードできますか？"

#: ../../sphinx/doc/faq.rst:26
msgid ""
"Add them in the :confval:`rst_prolog` or :confval:`rst_epilog` config value."
msgstr ""
"これらの定義を  :confval:`rst_prolog`か、:confval:`rst_epilog` のコンフィグ値を使って行ってください。"

#: ../../sphinx/doc/faq.rst:30
msgid "... display the whole TOC tree in the sidebar?"
msgstr "... すべての全体の目次をサイドバーに表示できますか？"

#: ../../sphinx/doc/faq.rst:29
msgid ""
"Use the :data:`toctree` callable in a custom layout template, probably in "
"the ``sidebartoc`` block."
msgstr ""
"おそらく、 ``sidebartoc`` ブロックに、と想像しますが、カスタムのレイアウトテンプレートの中で、 :data:`toctree` "
"を呼び出して使用することが可能です。"

#: ../../sphinx/doc/faq.rst:33
msgid "... write my own extension?"
msgstr "... 自分用のSphinx拡張を作成できますか？"

#: ../../sphinx/doc/faq.rst:33
msgid "See the :doc:`/development/tutorials/index`."
msgstr " :doc:`/development/tutorials/index` を参照してください。"

#: ../../sphinx/doc/faq.rst:38
msgid "... convert from my existing docs using MoinMoin markup?"
msgstr "... MoinMoinというWikiのマークアップで書かれた既存のドキュメントから変換できますか？"

#: ../../sphinx/doc/faq.rst:36
msgid ""
"The easiest way is to convert to xhtml, then convert `xhtml to reST`_. "
"You'll still need to mark up classes and such, but the headings and code "
"examples come through cleanly."
msgstr ""
"一番簡単な方法としてはレンダリング済みの `xhtmlからreST`_ に変換する方法でしょう。 "
"見出しやコード例などがうまく変換できたとしても、クラスなどのマークアップはしなおす必要があるでしょう。"

#: ../../sphinx/doc/faq.rst:40
msgid ""
"For many more extensions and other contributed stuff, see the sphinx-"
"contrib_ repository."
msgstr "他にも多くの有志により提供された拡張機能があるので、sphinx-contrib_ リポジトリを参照してください。"

#: ../../sphinx/doc/faq.rst:48
msgid "Using Sphinx with..."
msgstr "Sphinxと一緒に ... を使うには？"

#: ../../sphinx/doc/faq.rst:54
msgid "Read the Docs"
msgstr "Read the Docs"

#: ../../sphinx/doc/faq.rst:51
msgid ""
"`Read the Docs <https://readthedocs.org>`_ is a documentation hosting "
"service based around Sphinx.  They will host sphinx documentation, along "
"with supporting a number of other features including version support, PDF "
"generation, and more. The `Getting Started`_ guide is a good place to start."
msgstr ""
"`Read the Docs <https://readthedocs.org>`_ "
"はSphinxを基盤としたドキュメントホスティングサービスです。バージョン管理、PDF作成など多くの機能を持ち、Sphinxドキュメントのサービスを提供しています。始めるには"
" `Getting Started`_ のガイドをまず読むと良いでしょう。 "

#: ../../sphinx/doc/faq.rst:58
msgid "Epydoc"
msgstr "Epydoc"

#: ../../sphinx/doc/faq.rst:57
msgid ""
"There's a third-party extension providing an `api role`_ which refers to "
"Epydoc's API docs for a given identifier."
msgstr ""
"`API ロール`_ "
"を提供するサードパーティ製の拡張機能があります。このロールは、与えられた識別子を持つ要素のEpydocのAPIドキュメントを参照します。"

#: ../../sphinx/doc/faq.rst:62
msgid "Doxygen"
msgstr "Doxygen"

#: ../../sphinx/doc/faq.rst:61
msgid ""
"Michael Jones is developing a reST/Sphinx bridge to doxygen called `breathe "
"<https://github.com/michaeljones/breathe/tree/master>`_."
msgstr ""
"Michael Jonesは reST/Sphinxをdoxygenに変換する `breathe "
"<https://github.com/michaeljones/breathe/tree/master>`_. を開発しています。"

#: ../../sphinx/doc/faq.rst:66
msgid "SCons"
msgstr "SCons"

#: ../../sphinx/doc/faq.rst:65
msgid ""
"Glenn Hutchings has written a SCons build script to build Sphinx "
"documentation; it is hosted here: https://bitbucket.org/zondo/sphinx-scons"
msgstr ""
"Glenn Hutchingsは "
"SConsのビルドスクリプトをSphinxドキュメントをビルドするために書きました。https://bitbucket.org/zondo"
"/sphinx-scons にあります。 "

#: ../../sphinx/doc/faq.rst:72
msgid "PyPI"
msgstr "PyPI"

#: ../../sphinx/doc/faq.rst:69
msgid ""
"Jannis Leidel wrote a `setuptools command <https://pypi.org/project/Sphinx-"
"PyPI-upload/>`_ that automatically uploads Sphinx documentation to the PyPI "
"package documentation area at https://pythonhosted.org/."
msgstr ""
"Jannis Leidel はSphinxドキュメントを https://pythonhosted.org/ "
"というPyPIパッケージのドキュメントを置く場所に自動的にアップロードする `setuptools command "
"<https://pypi.org/project/Sphinx-PyPI-upload/>`_ を作成しました。"

#: ../../sphinx/doc/faq.rst:77
msgid "GitHub Pages"
msgstr "GitHub Pages"

#: ../../sphinx/doc/faq.rst:75
msgid ""
"Please add :py:mod:`sphinx.ext.githubpages` to your project.  It allows you "
"to publish your document in GitHub Pages.  It generates helper files for "
"GitHub Pages on building HTML document automatically."
msgstr ""
":py:mod:`sphinx.ext.githubpages`  をぜひご自身のプロジェクトに追加してください。GitHub "
"Pagesでドキュメントをパブリッシュできるようになります。HTMドキュメントを自動ビルドする際には、GitHub "
"Pages用のヘルパーファイル群を生成します。"

#: ../../sphinx/doc/faq.rst:81
msgid "MediaWiki"
msgstr "MediaWiki"

#: ../../sphinx/doc/faq.rst:80
msgid ""
"See https://bitbucket.org/kevindunn/sphinx-wiki/wiki/Home, a project by "
"Kevin Dunn."
msgstr ""
"Kevin Dunnによるプロジェクトです。https://bitbucket.org/kevindunn/sphinx-wiki/wiki/Home "
"を見てください。"

#: ../../sphinx/doc/faq.rst:115
msgid "Google Analytics"
msgstr "Google Analytics"

#: ../../sphinx/doc/faq.rst:84
msgid "You can use a custom ``layout.html`` template, like this:"
msgstr "次のようなカスタムの ``layout.html`` テンプレートを使用できます:"

#: ../../sphinx/doc/faq.rst:144
msgid "Google Search"
msgstr "Google 検索"

#: ../../sphinx/doc/faq.rst:118
msgid ""
"To replace Sphinx's built-in search function with Google Search, proceed as "
"follows:"
msgstr "Sphinx のビルトインの検索機能をGoogle検索に置き換えるには、以下のようにしてください: "

#: ../../sphinx/doc/faq.rst:121
msgid ""
"Go to https://cse.google.com/cse/all to create the Google Search code "
"snippet."
msgstr "https://cse.google.com/cse/all に行き、Google検索のコードスニペットを作成してください。"

#: ../../sphinx/doc/faq.rst:124
msgid ""
"Copy the code snippet and paste it into ``_templates/searchbox.html`` in "
"your Sphinx project:"
msgstr ""
"そのコードスニペットをコピーし、ご自身のSphinxプロジェクト内の ``_templates/searchbox.html`` に貼り付けてください:"
" "

#: ../../sphinx/doc/faq.rst:144
msgid ""
"Add ``searchbox.html`` to the :confval:`html_sidebars` configuration value."
msgstr " ``searchbox.html`` を :confval:`html_sidebars` の設定値に加えてください。"

#: ../../sphinx/doc/faq.rst:152
msgid "Sphinx vs. Docutils"
msgstr "Sphinx 対 Docutils"

#: ../../sphinx/doc/faq.rst:154
msgid ""
"tl;dr: *docutils* converts reStructuredText to multiple output formats. "
"Sphinx builds upon docutils to allow construction of cross-referenced and "
"indexed bodies of documentation."
msgstr ""
"tl;dr: *docutils* はreStructuredText を多様なフォーマットに変換します。Sphinx は docutils "
"上で動作し、相互参照やインデックス化された文書の本体を構築します。"

#: ../../sphinx/doc/faq.rst:158
msgid ""
"`docutils`__ is a text processing system for converting plain text "
"documentation into other, richer formats. As noted in the `docutils "
"documentation`__, docutils uses *readers* to read a document, *parsers* for "
"parsing plain text formats into an internal tree representation made up of "
"different types of *nodes*, and *writers* to output this tree in various "
"document formats.  docutils provides parsers for one plain text format - "
"`reStructuredText`__ - though other, *out-of-tree* parsers have been "
"implemented including Sphinx's :doc:`Markdown parser </usage/markdown>`. On "
"the other hand, it provides writers for many different formats including "
"HTML, LaTeX, man pages, Open Document Format and XML."
msgstr ""
"`docutils`__ はプレーンテキスト文書をより複雑な他のフォーマットへ変換する文書処理システムです。`docutils "
"documentation`__ で触れたように、 docutilsでは *readers* をドキュメントの解読に用い、 *parsers* "
"をプレーンテキストを様々な種類の *nodes* から構成された内部木表現へパースする際に用います。そして *writers* "
"を用いてこの木を様々なドキュメントフォーマットに出力します。 docutils は1つのプレーンテキストフォーマット、すなわち "
"`reStructuredText`__ パーサーのみを提供します。しかしながら、Sphinx's :doc:`Markdown parser 1` "
"などで 他の*out-of-tree* "
"パーサーが実装されていて、これが様々なフォーマットに対するwriterを提供しています。対応するフォーマットとしてはHTML、LaTeX、 man "
"pages、Open Document Format 、そしてXMLがあります。"

#: ../../sphinx/doc/faq.rst:169
msgid ""
"docutils exposes all of its functionality through a variety of `front-end "
"tools`__, such as ``rst2html``, ``rst2odt`` and ``rst2xml``. Crucially "
"though, all of these tools, and docutils itself, are concerned with "
"individual documents.  They don't support concepts such as cross-"
"referencing, indexing of documents, or the construction of a document "
"hierarchy (typically manifesting in a table of contents)."
msgstr ""
"docutils は各種の `front-end tools`__ を通してその機能を発揮します。例えば、 "
"``rst2html``、``rst2odt`` そして ``rst2xml``などです. ただし、これらすべてのツールや  docutils "
"自体は文書を個々に扱います。相互参照や文書のインデックス化、あるいは文書の階層化（典型的な例で言えば、目次）はサポートされていません。"

#: ../../sphinx/doc/faq.rst:176
msgid ""
"Sphinx builds upon docutils by harnessing docutils' readers and parsers and "
"providing its own :doc:`/usage/builders/index`. As a result, Sphinx wraps "
"some of the *writers* provided by docutils. This allows Sphinx to provide "
"many features that would simply not be possible with docutils, such as those"
" outlined above."
msgstr ""
"Sphinx はdocutils 上で動作し、 docutilsのreaderとパーサーを利用しながらもSphinx独自の "
":doc:`/usage/builders/index` を提供します。その結果として、Sphinxは docutils の "
"*writers*のいくつかをラップしています。このことにより、上で述べたようなdocutilsでは全くできなかったことが、Sphinxでは可能になっています。"

#: ../../sphinx/doc/faq.rst:191
msgid "Epub info"
msgstr "Epub情報"

#: ../../sphinx/doc/faq.rst:193
msgid "The following list gives some hints for the creation of epub files:"
msgstr "epubファイルを作成するためのいくつかのヒントを記します。"

#: ../../sphinx/doc/faq.rst:195
msgid ""
"Split the text into several files. The longer the individual HTML files are,"
" the longer it takes the ebook reader to render them.  In extreme cases, the"
" rendering can take up to one minute."
msgstr ""
"テキストはいくつかのファイルに分割してください。長いHTMLファイルの場合、電子ブックリーダーによってはレンダリングに長い時間がかかります。極端な場合には、1分ほどかかることもあります。"

#: ../../sphinx/doc/faq.rst:199
msgid "Try to minimize the markup.  This also pays in rendering time."
msgstr "マークアップは少なくなるようにしてください。これはレンダリング時間に関わってきます。"

#: ../../sphinx/doc/faq.rst:201
msgid ""
"For some readers you can use embedded or external fonts using the CSS "
"``@font-face`` directive.  This is *extremely* useful for code listings "
"which are often cut at the right margin.  The default Courier font (or "
"variant) is quite wide and you can only display up to 60 characters on a "
"line.  If you replace it with a narrower font, you can get more characters "
"on a line.  You may even use `FontForge <https://fontforge.github.io/>`_ and"
" create narrow variants of some free font.  In my case I get up to 70 "
"characters on a line."
msgstr ""
"いくつかの電子書籍リーダーでは、CSSの ``@font-face`` "
"ディレクティブを使うことで、組み込みフォントや外部フォントを使用できます。正しいマージンが行われるようになるため、ソースコードのリストを表現する場合に "
"**非常に** "
"役立ちます。デフォルトのCourierフォント(もしくはvariant)の場合には、一行につき60文字しか表現できません。もしもより狭いフォントを指定すると、一行の表示文字数を増やせます。"
" `FontForge <https://fontforge.github.io/>`_ "
"を使用して、フリーフォントの幅を短くしたバージョンを作成することができます。私が試した限りでは一行あたり70文字まで増やすことができました。"

#: ../../sphinx/doc/faq.rst:210
msgid "You may have to experiment a little until you get reasonable results."
msgstr "納得のいく結果を得るためには、多少の試行錯誤が必要になるでしょう。"

#: ../../sphinx/doc/faq.rst:212
msgid ""
"Test the created epubs. You can use several alternatives.  The ones I am "
"aware of are Epubcheck_, Calibre_, FBreader_ (although it does not render "
"the CSS), and Bookworm_.  For Bookworm, you can download the source from "
"https://code.google.com/archive/p/threepress and run your own local server."
msgstr ""
"作成されたepubファイルはテストしてください。いくつかの選択肢があります。私が確認するようにしているのは、 Epubcheck_, Calibre_,"
" FBreader_ (これはCSSをレンダリングできません), Bookworm_ です。Bookwormは、 "
"https://code.google.com/archive/p/threepress からダウンロードして、ローカルのサーバ上で実行します。"

#: ../../sphinx/doc/faq.rst:217
msgid ""
"Large floating divs are not displayed properly. If they cover more than one "
"page, the div is only shown on the first page. In that case you can copy the"
" :file:`epub.css` from the ``sphinx/themes/epub/static/`` directory to your "
"local ``_static/`` directory and remove the float settings."
msgstr ""
"大きなフローティング指定のdiv要素は適切に表示されません。もしも複数ページにわたるdiv要素があったとしても、最初のページにしか表示されません。もしこのような場合には、"
" ``sphinx/themes/epub/static/`` にある :file:`epub.css` をローカルの ``_static/`` "
"にコピーして、float設定を削除してください。"

#: ../../sphinx/doc/faq.rst:223
msgid ""
"Files that are inserted outside of the ``toctree`` directive must be "
"manually included. This sometimes applies to appendixes, e.g. the glossary "
"or the indices.  You can add them with the :confval:`epub_post_files` "
"option."
msgstr ""
"``toctree`` ディレクティブ外のファイルは、手動で含めなければなりません。用語集、索引などのAppendixが場合によっては該当します。 "
":confval:`epub_post_files` オプションを使うと、これらのファイルを追加できます。"

#: ../../sphinx/doc/faq.rst:227
msgid ""
"The handling of the epub cover page differs from the reStructuredText "
"procedure which automatically resolves image paths and puts the images into "
"the ``_images`` directory.  For the epub cover page put the image in the "
":confval:`html_static_path` directory and reference it with its full path in"
" the :confval:`epub_cover` config option."
msgstr ""
"epubカバーページの扱いは、自動的に画像パスを解析し、 ``_images`` "
"ディレクトリに画像を置いてくれる他のreStructedTextの方式とは異なります。epubカバーページでは、画像を "
":confval:`html_static_path` ディレクトリに置いた上で、 :confval:`epub_cover` "
"設定に完全なパスを書く必要があります。"

#: ../../sphinx/doc/faq.rst:233
msgid ""
"kindlegen_ command can convert from epub3 resulting file to ``.mobi`` file "
"for Kindle. You can get ``yourdoc.mobi`` under ``_build/epub`` after the "
"following command:"
msgstr ""
"kindlegen_ コマンドは、 epub3 の生成ファイルをKindle用の ``.mobi`` ファイルに変換できます。 "
"次のコマンドを入力することで ``_build/epub`` 下に ``yourdoc.mobi`` が得られます。"

#: ../../sphinx/doc/faq.rst:242
msgid ""
"The kindlegen command doesn't accept documents that have section titles "
"surrounding ``toctree`` directive:"
msgstr "kindlegen コマンドは、``toctree`` ディレクティブがセクションタイトルで囲まれているドキュメントを受け付けません:"

#: ../../sphinx/doc/faq.rst:257
msgid ""
"kindlegen assumes all documents order in line, but the resulting document "
"has complicated order for kindlegen::"
msgstr ""
"kindlegenではすべてのドキュメントが一列の順に並んでいることを想定していますが、出力されたドキュメントの並びはkindlegenにとって理解しにくいことがあります::"

#: ../../sphinx/doc/faq.rst:262
msgid "If you get the following error, fix your document structure::"
msgstr "下記のエラーが出たら、ドキュメントの構造を修正してください::"

#: ../../sphinx/doc/faq.rst:276
msgid "Texinfo info"
msgstr "Texinfo情報"

#: ../../sphinx/doc/faq.rst:278
msgid ""
"There are two main programs for reading Info files, ``info`` and GNU Emacs."
"  The ``info`` program has less features but is available in most Unix "
"environments and can be quickly accessed from the terminal.  Emacs provides "
"better font and color display and supports extensive customization (of "
"course)."
msgstr ""
"Infoファイルを読むプログラムは、 ``info`` とGNU Emacsの2つあります。 ``info`` "
"プログラムは機能は少ないのですが、ほとんどのUNIX環境で利用可能であり、ターミナルからのアクセスは簡単です。Emacsはフォントや色の表示がターミナルよりも優れており、(もちろん)様々なカスタマイズが可能です。"

#: ../../sphinx/doc/faq.rst:286
msgid "Displaying Links"
msgstr "リンクの表示"

#: ../../sphinx/doc/faq.rst:288
msgid ""
"One noticeable problem you may encounter with the generated Info files is "
"how references are displayed.  If you read the source of an Info file, a "
"reference to this section would look like::"
msgstr ""
"Infoファイルの生成時の問題は、参照をどのように表示するか、です。もし、Infoファイルのソースを見ると、このセクションへのリンクは次のように書かれます::"

#: ../../sphinx/doc/faq.rst:294
msgid ""
"In the stand-alone reader, ``info``, references are displayed just as they "
"appear in the source.  Emacs, on the other-hand, will by default replace "
"``*note:`` with ``see`` and hide the ``target-id``.  For example:"
msgstr ""
"スタンドアローンの ``info`` リーダーの場合、参照はソースコードに表示されている通りに表示されます。一方Emacsの場合は、デフォルトで "
"``*note:`` は ``see`` に置換され、 ``target-id`` は非表示になります。例:"

#: ../../sphinx/doc/faq.rst:298
msgid ":ref:`texinfo-links`"
msgstr ":ref:`texinfo-links`"

#: ../../sphinx/doc/faq.rst:300
msgid ""
"The exact behavior of how Emacs displays references is dependent on the "
"variable ``Info-hide-note-references``.  If set to the value of ``hide``, "
"Emacs will hide both the ``*note:`` part and the ``target-id``.  This is "
"generally the best way to view Sphinx-based documents since they often make "
"frequent use of links and do not take this limitation into account.  "
"However, changing this variable affects how all Info documents are displayed"
" and most do take this behavior into account."
msgstr ""
"Emacsで参照をどのように表示するかは、 ``Info-hide-note-references`` 変数の定義で変わります。もしこの変数に "
"``hide`` を設定すると、Emacsは ``*note:`` 部分と、 ``target-id`` "
"の両方を非表示にします。もしこの制限を気にせず、リンクを多用してSphinxベースのドキュメントを見るのであれば、この設定がベストでしょう。しかし、この変数を変えた場合に、すべてのInfoドキュメントの表示と挙動が変わってしまうことに注意が必要です。"

#: ../../sphinx/doc/faq.rst:308
msgid ""
"If you want Emacs to display Info files produced by Sphinx using the value "
"``hide`` for ``Info-hide-note-references`` and the default value for all "
"other Info files, try adding the following Emacs Lisp code to your start-up "
"file, ``~/.emacs.d/init.el``."
msgstr ""
"もし、Sphinxで作られたInfoファイルのときだけ、 ``Info-hide-note-references`` を ``hide`` "
"にしたい場合には、次のEmacs Lispのコードをスタートアップファイル ``~/.emacs.d/init.el`` に追加してください。"

#: ../../sphinx/doc/faq.rst:334
msgid "Notes"
msgstr "メモ"

#: ../../sphinx/doc/faq.rst:336
msgid ""
"The following notes may be helpful if you want to create Texinfo files:"
msgstr "以下のメモは、Texinfoファイルを作る時の参考となるメモです。"

#: ../../sphinx/doc/faq.rst:338
msgid "Each section corresponds to a different ``node`` in the Info file."
msgstr "それぞれのセクションは、Infoファイルの ``node`` となります。"

#: ../../sphinx/doc/faq.rst:340
msgid ""
"Colons (``:``) cannot be properly escaped in menu entries and xrefs. They "
"will be replaced with semicolons (``;``)."
msgstr "メニューエントリーとxrefの中のコロン(``:``)はきちんとエスケープされません。これはセミコロン(``;``)にと変換されます。"

#: ../../sphinx/doc/faq.rst:343
msgid ""
"Links to external Info files can be created using the somewhat official URI "
"scheme ``info``.  For example::"
msgstr "外部のInfoファイルへの参照は、 ``info`` という公式なURIスキームを使用して作成されます。例えば::"

#: ../../sphinx/doc/faq.rst:348
msgid "Inline markup"
msgstr "インラインマークアップ"

#: ../../sphinx/doc/faq.rst:350
msgid ""
"The standard formatting for ``*strong*`` and ``_emphasis_`` can result in "
"ambiguous output when used to markup parameter names and other values.  "
"Since this is a fairly common practice, the default formatting has been "
"changed so that ``emphasis`` and ``strong`` are now displayed like "
"```literal'``\\s."
msgstr ""
"マークアップパラメーター名と他の値とで使われるため、標準フォーマットの ``*strong*`` と ``_emphasis_`` "
"の出力は曖昧となります。これは非常によく見られる習慣のため、デフォルトのフォーマットが変更され、  ``emphasis`` と ``strong`` "
"は ``literal`` と同じように表示されるようになりました。"

#: ../../sphinx/doc/faq.rst:356
msgid ""
"The standard formatting can be re-enabled by adding the following to your "
":file:`conf.py`::"
msgstr "標準フォーマットは以下の設定を :file:`conf.py` に付け加えることで再度有効になります。::"
