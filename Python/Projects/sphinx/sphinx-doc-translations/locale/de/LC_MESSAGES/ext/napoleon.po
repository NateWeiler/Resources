# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2018, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 1.8.0+\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-25 15:55+0000\n"
"PO-Revision-Date: 2018-02-12 13:48+0000\n"
"Language-Team: German (https://www.transifex.com/sphinx-doc/teams/15434/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../sphinx/doc/ext/napoleon.rst:2
msgid ""
":mod:`sphinx.ext.napoleon` -- Support for NumPy and Google style docstrings"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:12
msgid "Napoleon - *Marching toward legible docstrings*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:16
msgid "Are you tired of writing docstrings that look like this::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:28
msgid ""
"`ReStructuredText`_ is great, but it creates visually dense, hard to read "
"`docstrings`_. Compare the jumble above to the same thing rewritten "
"according to the `Google Python Style Guide`_::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:41
msgid "Much more legible, no?"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:43
msgid ""
"Napoleon is a :doc:`../extensions` that enables Sphinx to parse both "
"`NumPy`_ and `Google`_ style docstrings - the style recommended by `Khan "
"Academy`_."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:46
msgid ""
"Napoleon is a pre-processor that parses `NumPy`_ and `Google`_ style "
"docstrings and converts them to reStructuredText before Sphinx attempts to "
"parse them. This happens in an intermediate step while Sphinx is processing "
"the documentation, so it doesn't modify any of the docstrings in your actual"
" source code files."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:64
msgid "Getting Started"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:66
msgid ""
"After :doc:`setting up Sphinx </usage/quickstart>` to build your docs, "
"enable napoleon in the Sphinx `conf.py` file::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:74
msgid "Use `sphinx-apidoc` to build your API documentation::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:80
msgid "Docstrings"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:82
msgid ""
"Napoleon interprets every docstring that :mod:`autodoc <sphinx.ext.autodoc>`"
" can find, including docstrings on: ``modules``, ``classes``, "
"``attributes``, ``methods``, ``functions``, and ``variables``. Inside each "
"docstring, specially formatted `Sections`_ are parsed and converted to "
"reStructuredText."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:88
msgid "All standard reStructuredText formatting still works as expected."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:94
msgid "Docstring Sections"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:96
msgid "All of the following section headers are supported:"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:98
msgid "``Args`` *(alias of Parameters)*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:99
msgid "``Arguments`` *(alias of Parameters)*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:100
msgid "``Attention``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:101
msgid "``Attributes``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:102
msgid "``Caution``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:103
msgid "``Danger``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:104
msgid "``Error``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:105
msgid "``Example``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:106
msgid "``Examples``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:107
msgid "``Hint``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:108
msgid "``Important``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:109
msgid "``Keyword Args`` *(alias of Keyword Arguments)*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:110
msgid "``Keyword Arguments``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:111
msgid "``Methods``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:112
msgid "``Note``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:113
msgid "``Notes``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:114
msgid "``Other Parameters``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:115
msgid "``Parameters``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:116
msgid "``Return`` *(alias of Returns)*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:117
msgid "``Returns``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:118
msgid "``Raises``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:119
msgid "``References``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:120
msgid "``See Also``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:121
msgid "``Tip``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:122
msgid "``Todo``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:123
msgid "``Warning``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:124
msgid "``Warnings`` *(alias of Warning)*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:125
msgid "``Warns``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:126
msgid "``Yield`` *(alias of Yields)*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:127
msgid "``Yields``"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:130
msgid "Google vs NumPy"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:132
msgid ""
"Napoleon supports two styles of docstrings: `Google`_ and `NumPy`_. The main"
" difference between the two styles is that Google uses indention to separate"
" sections, whereas NumPy uses underlines."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:136
msgid "Google style:"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:155
msgid "NumPy style:"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:179
msgid ""
"NumPy style tends to require more vertical space, whereas Google style tends"
" to use more horizontal space. Google style tends to be easier to read for "
"short and simple docstrings, whereas NumPy style tends be easier to read for"
" long and in-depth docstrings."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:184
msgid "The `Khan Academy`_ recommends using Google style."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:186
msgid ""
"The choice between styles is largely aesthetic, but the two styles should "
"not be mixed. Choose one style for your project and be consistent with it."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:191
msgid "For complete examples:"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:193
msgid ":ref:`example_google`"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:194
msgid ":ref:`example_numpy`"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:198
msgid "Type Annotations"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:200
msgid ""
"`PEP 484`_ introduced a standard way to express types in Python code. This "
"is an alternative to expressing types directly in docstrings. One benefit of"
" expressing types according to `PEP 484`_ is that type checkers and IDEs can"
" take advantage of them for static code analysis."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:206
msgid "Google style with Python 3 type annotations::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:223
msgid "Google style with types in docstrings::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:241
msgid ""
"`Python 2/3 compatible annotations`_ aren't currently supported by Sphinx "
"and won't show up in the docs."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:252
msgid "Configuration"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:254
msgid ""
"Listed below are all the settings used by napoleon and their default values."
" These settings can be changed in the Sphinx `conf.py` file. Make sure that "
"\"sphinx.ext.napoleon\" is enabled in `conf.py`::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:285
msgid ""
"True to parse `Google style`_ docstrings. False to disable support for "
"Google style docstrings. *Defaults to True.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:290
msgid ""
"True to parse `NumPy style`_ docstrings. False to disable support for NumPy "
"style docstrings. *Defaults to True.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:295
msgid ""
"True to list ``__init___`` docstrings separately from the class docstring. "
"False to fall back to Sphinx's default behavior, which considers the "
"``__init___`` docstring as part of the class documentation. *Defaults to "
"False.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:300 ../../sphinx/doc/ext/napoleon.rst:316
#: ../../sphinx/doc/ext/napoleon.rst:334 ../../sphinx/doc/ext/napoleon.rst:359
#: ../../sphinx/doc/ext/napoleon.rst:405 ../../sphinx/doc/ext/napoleon.rst:433
#: ../../sphinx/doc/ext/napoleon.rst:475
msgid "**If True**::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:312
msgid ""
"True to include private members (like ``_membername``) with docstrings in "
"the documentation. False to fall back to Sphinx's default behavior. "
"*Defaults to False.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:330
msgid ""
"True to include special members (like ``__membername__``) with docstrings in"
" the documentation. False to fall back to Sphinx's default behavior. "
"*Defaults to True.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:348
msgid ""
"True to use the ``.. admonition::`` directive for the **Example** and "
"**Examples** sections. False to use the ``.. rubric::`` directive instead. "
"One may look better than the other depending on what HTML theme is used. "
"*Defaults to False.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:353 ../../sphinx/doc/ext/napoleon.rst:398
#: ../../sphinx/doc/ext/napoleon.rst:424 ../../sphinx/doc/ext/napoleon.rst:468
msgid "This `NumPy style`_ snippet will be converted as follows::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:365 ../../sphinx/doc/ext/napoleon.rst:410
#: ../../sphinx/doc/ext/napoleon.rst:440 ../../sphinx/doc/ext/napoleon.rst:480
msgid "**If False**::"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:373
msgid ""
"True to use the ``.. admonition::`` directive for **Notes** sections. False "
"to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:376
msgid ""
"The singular **Note** section will always be converted to a ``.. note::`` "
"directive."
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:381 ../../sphinx/doc/ext/napoleon.rst:391
msgid ":attr:`napoleon_use_admonition_for_examples`"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:385
msgid ""
"True to use the ``.. admonition::`` directive for **References** sections. "
"False to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:395
msgid ""
"True to use the ``:ivar:`` role for instance variables. False to use the "
"``.. attribute::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:420
msgid ""
"True to use a ``:param:`` role for each function parameter. False to use a "
"single ``:parameters:`` role for all the parameters. *Defaults to True.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:449
msgid ""
"True to use a ``:keyword:`` role for each function keyword argument. False "
"to use a single ``:keyword arguments:`` role for all the keywords. *Defaults"
" to True.*"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:454
msgid ""
"This behaves similarly to  :attr:`napoleon_use_param`. Note unlike docutils,"
" ``:keyword:`` and ``:param:`` will not be treated the same way - there will"
" be a separate \"Keyword Arguments\" section, rendered in the same fashion "
"as \"Parameters\" section (type links created if possible)"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:461
msgid ":attr:`napoleon_use_param`"
msgstr ""

#: ../../sphinx/doc/ext/napoleon.rst:465
msgid ""
"True to use the ``:rtype:`` role for the return type. False to output the "
"return type inline with the description. *Defaults to True.*"
msgstr ""
