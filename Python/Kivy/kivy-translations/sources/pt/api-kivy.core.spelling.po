# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-04 16:54\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.9.0\n"

# 71158657b49c4e59a58297b24e73544b
#: ../../sources/api-kivy.core.spelling.rst:3
msgid "Spelling"
msgstr ""

# 599b709c2c814a6e95c1e3af4008c4ec
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling:2
msgid "Provide abstracted access to a range of spellchecking backends.  Also provides word suggestions. The API is inspired by enchant, but other backends can be added that implement the same API."
msgstr ""

# 48ff0408f98a4a22a3edf3cc6ec6e3a2
#: ../../<autodoc>:1
msgid "Bases: :class:`object`"
msgstr ""

# e8b95f0d774b4324921d73a32a7775ce
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase:1
msgid "Base class for all spelling providers. Supports some abstract methods for checking words and getting suggestions."
msgstr ""

# 17a268d9e02b466aa0eff807e3f42d35
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:1
msgid "If `word` is a valid word in `self._language`, return True."
msgstr ""

# 6a9c37947bd44c6a8200e39d9fe0ae97
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:5
msgid "The word to check. If the word is a valid word in the currently active language, True is returned. If the word shouldn't be checked, return None (e.g. for '')."
msgstr ""

# 36e51aeebe7c49c484cea064b40e449c
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.list_languages:1
msgid "Return a list of all languages supported by the registered languages. E.g.: ['en', 'en_GB', 'en_US', 'de', ...]"
msgstr ""

# f29d42590281431c87bc1ead5a2037d6
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:1
msgid "From the set of registered languages, select the first language for `language`."
msgstr ""

# d77e343045a94cf4bb6c26ed0ef6a4b7
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:6
msgid "Language identifier. Needs to be one of the options returned by list_languages(). Sets the language used for spell checking and word suggestions."
msgstr ""

# 7ca68759765744a39bba31cfdc04a686
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:1
msgid "For a given `fragment` (i.e., part of a word or a word by itself), provide corrections (`fragment` may be misspelled) or completions as a list of strings."
msgstr ""

# fcbc97246e7c48828cf41c13584e923c
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:7
msgid "The word fragment to get suggestions/corrections for. E.g.: 'foo' might become 'of', 'food' or 'foot'."
msgstr ""

# a0a8ac2bdad74a59873153f7fdf1d686
# 6be5f68dfd2549f9a16dfbe0931ab2b4
#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "Bases: :class:`exceptions.Exception`"
msgstr ""

# 1e44ca66d510422fa25b39537623bfed
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoSuchLangError:1
msgid "Exception to be raised when a specific language could not be found."
msgstr ""

# 81b88d4e51904a3d87db923289418099
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoLanguageSelectedError:1
msgid "Exception to be raised when a language-using method is called but no language was selected prior to the call."
msgstr ""
