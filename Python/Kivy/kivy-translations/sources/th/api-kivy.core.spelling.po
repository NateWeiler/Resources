# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-04 17:12\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: th\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.9.0\n"

# 3d23af849ebf4a37aa7f1e5561e732c0
#: ../../sources/api-kivy.core.spelling.rst:3
msgid "Spelling"
msgstr ""

# 64f703d7931c4c0db1f9ca1f51115aaa
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling:2
msgid "Provide abstracted access to a range of spellchecking backends.  Also provides word suggestions. The API is inspired by enchant, but other backends can be added that implement the same API."
msgstr ""

# f90cc02f17854b2eab4b1a8b6607291b
#: ../../<autodoc>:1
msgid "Bases: :class:`object`"
msgstr ""

# ea9e3ac827fb4856921bcd6fc7df9392
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase:1
msgid "Base class for all spelling providers. Supports some abstract methods for checking words and getting suggestions."
msgstr ""

# b38c641ad1cb4addbe2fab78d231a57e
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:1
msgid "If `word` is a valid word in `self._language`, return True."
msgstr ""

# eaad02d01c854506b8f6cb82e70c1564
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:5
msgid "The word to check. If the word is a valid word in the currently active language, True is returned. If the word shouldn't be checked, return None (e.g. for '')."
msgstr ""

# e2f153c093b5417b961136e80d25a648
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.list_languages:1
msgid "Return a list of all languages supported by the registered languages. E.g.: ['en', 'en_GB', 'en_US', 'de', ...]"
msgstr ""

# 0e08c342662e4b9e8bacf44fd5a1885b
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:1
msgid "From the set of registered languages, select the first language for `language`."
msgstr ""

# cb5be3a3b15741b3a110ace1113a6787
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:6
msgid "Language identifier. Needs to be one of the options returned by list_languages(). Sets the language used for spell checking and word suggestions."
msgstr ""

# 54b8b566a846413581e6e0f3265ea490
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:1
msgid "For a given `fragment` (i.e., part of a word or a word by itself), provide corrections (`fragment` may be misspelled) or completions as a list of strings."
msgstr ""

# a12645e2b18743d4b9d509ed5c605af8
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:7
msgid "The word fragment to get suggestions/corrections for. E.g.: 'foo' might become 'of', 'food' or 'foot'."
msgstr ""

# 4ba89fb8d4734b479d8232f475bbf9e1
# 98b27d314dc343e1844a3072ae3f00e9
#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "Bases: :class:`exceptions.Exception`"
msgstr ""

# e713996ecc0247689d8378fabdc8085d
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoSuchLangError:1
msgid "Exception to be raised when a specific language could not be found."
msgstr ""

# c7fdf51580e844048acf2357285e9d09
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoLanguageSelectedError:1
msgid "Exception to be raised when a language-using method is called but no language was selected prior to the call."
msgstr ""
