# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-04 16:54\n"
"PO-Revision-Date: 2011-09-29 03:26+0200\n"
"Last-Translator: T64 <gninneh64@googlemail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Pootle 2.1.6\n"

# 9713b513296b4538bf9d29279bb2d108
# 12ce537a453a4d1da415d3196d8e6f41
#: ../../sources/api-kivy.app.rst:3
msgid "Application"
msgstr "Anwendung"

# 0ad8cc41167a43ef9ebbedd191898ef6
# ceed36fefc184637a768f4b33c362d27
#: ../../../kivy/app.py:docstring of kivy.app:2
msgid "The :class:`App` class is the base for creating Kivy applications. Think of it as your main entry point into the Kivy run loop.  In most cases, you subclass this class and make your own app. You create an instance of your specific app class and then, when you are ready to start the application's life cycle, you call your instance's :func:`App.run` method."
msgstr ""
"Die :class:`App` Klasse ist die Grundlage zum Erstellen von Kivy "
"Anwendungen. Man kann sie sich als Startpunkt der Hauptprogrammschleife von "
"Kivy vorstellen.In den meisten Fällen bildet man Unterklassen dieser Klasse "
"um eine eigene Anwendung zu schreiben. Nachdem man eine Instanz der App-"
"Klasse erstellt hat, kann man die Anwendung mit der :func:`App.run` Methode "
"starten."

# d16375f8da4d4a2ea86d540a60ea59d2
#: ../../../kivy/app.py:docstring of kivy.app:10
msgid "Creating an Application"
msgstr ""

# b619b32067694c5497f932a0c6815968
#: ../../../kivy/app.py:docstring of kivy.app:13
msgid "Method using build() override"
msgstr ""

# 3e4c6db73c1c45d091703532cae3f85a
# 6c10f60d26774ba9b11ae40e254a48e4
#: ../../../kivy/app.py:docstring of kivy.app:15
msgid "To initialize your app with a widget tree, override the build() method in your app class and return the widget tree you constructed."
msgstr ""
"Um den widget tree zu initialisieren, muss die build() Methode neu "
"geschreiben werde und der eigene widget tree muss von dieser zurückgegeben "
"werden."

# 29993ca6bfec46d087e3624182df3677
# 5f394f20e1004f40a92b500276f07887
#: ../../../kivy/app.py:docstring of kivy.app:18
msgid "Here's an example of very simple application that just shows a button:"
msgstr ""
"Hier ist ein Beispiel einer sehr simplen Anwendung, die nur einen Button "
"zeigt: "

# aee0f966f7724e2da80158208ed9eb9b
# 128468414d0642b798003d24ebd640d5
#: ../../../kivy/app.py:docstring of kivy.app:23
msgid "The file is also available in the examples folder at :file:`kivy/examples/application/app_with_build.py`."
msgstr ""
"Die Datei ist auch im \"examples\" Ordner verfügbar "
":file:`kivy/examples/application/app_with_build.py`."

# 94584002ac414319af1f3e25ca50d216
# 0bc983aac4ab4b9b8a8b1bbafa8f12df
#: ../../../kivy/app.py:docstring of kivy.app:26
msgid "Here, no widget tree was constructed (or if you will, a tree with only the root node)."
msgstr ""
"Hier wurde kein widget tree erstellt bzw. ist es ein widget tree "
"ausschließlich mit dem root widget."

# b59a513181944454b2ca05ae27b5353d
#: ../../../kivy/app.py:docstring of kivy.app:31
msgid "Method using kv file"
msgstr ""

# 9258eace7c7f4afa8a87199a757641c3
# f00d8c180a3a41438f03a82c5f9a176c
#: ../../../kivy/app.py:docstring of kivy.app:33
msgid "You can also use the :doc:`api-kivy.lang` for creating application. The .kv can contain rules and root widget definitions at the same time. Here is the same example as the Button one in a kv file."
msgstr ""
"Es kann auch die :doc:`api-kivy.lang` zum erstellen von Anwendungen genutzt "
"werden. Die .kv Datei kann gleichzeitig Regeln und root Widget Definitionen "
"enthalten. Hier ist das selbe Beispiel mit dem Button nocheinmal als .kv "
"Datei."

# 39edb310cd9843e5ad999897798b5b30
# e138ec0cf6cc4cd189d9863dc631b5fd
#: ../../../kivy/app.py:docstring of kivy.app:37
msgid "Contents of 'test.kv':"
msgstr "Inhalt von 'test.kv':"

# 9a97f015627d4085a0bb3cd92a61eb07
# daa4f504fbe0421f827fe6fd399051b3
#: ../../../kivy/app.py:docstring of kivy.app:42
msgid "Contents of 'main.py':"
msgstr "Inhalt von 'main.py':"

# f2394ac84cf841288c6f8651539f0f57
# dbd0e72620404f888acf4a0266832feb
#: ../../../kivy/app.py:docstring of kivy.app:47
msgid "See :file:`kivy/examples/application/app_with_kv.py`."
msgstr "Siehe :file:`kivy/examples/application/app_with_kv.py`."

# b7a8f0bfaace4c07a7631c432a93fa44
# 7c4d63996d5449e1b4e89ce236025b94
#: ../../../kivy/app.py:docstring of kivy.app:49
msgid "The relation between main.py and test.kv is explained in :func:`App.load_kv`."
msgstr ""
"Die Beziehung zwischen main.py und test.kv wird in :func:`App.load_kv` "
"erklärt."

# b7429564a3e841fa982da5270b6f32d2
#: ../../../kivy/app.py:docstring of kivy.app:53
msgid "Application configuration"
msgstr ""

# 4a7de532833b4f2aaedac7a57c40b8ae
#: ../../../kivy/app.py:docstring of kivy.app:58
msgid "Use the configuration file"
msgstr ""

# 4ad0622ccdf14e41b504c0340e29ebca
#: ../../../kivy/app.py:docstring of kivy.app:60
msgid "Your application might want to have his own configuration file. The :class:`App` is able to handle a INI file automatically. You add your section/key/value in the :meth:`App.build_config` method by using the `config` parameters (instance of :class:`~kivy.config.ConfigParser`::"
msgstr ""

# 6a486d0db0cf430a9aca6db9ae26d248
#: ../../../kivy/app.py:docstring of kivy.app:72
msgid "As soon as you will add one section in the config, a file will be created on the disk, and be named from the mangled name of your class: \"TestApp\" will give a config filename \"test.ini\" with the content::"
msgstr ""

# ada6a01683d34255b032989adaf60e59
#: ../../../kivy/app.py:docstring of kivy.app:80
msgid "The \"test.ini\" will be automatically loaded at runtime, and you can access to the configuration in your :meth:`App.build` method::"
msgstr ""

# 2c79f790a0cf4458a01e950d0ae2e7b7
#: ../../../kivy/app.py:docstring of kivy.app:97
msgid "Create a settings panel"
msgstr ""

# 3f5e602c293c4c179025298a99795557
#: ../../../kivy/app.py:docstring of kivy.app:99
msgid "Your application can have a settings panel to let your user configure some of your config tokens. Here is an example done in the KinectViewer example (available in the examples directory):"
msgstr ""

# 35dc57a3e5504e299cbf8b4e27c25e39
#: ../../../kivy/app.py:docstring of kivy.app:106
msgid "You have the possibility to extends the default application settings with your own panel by extending the :meth:`App.build_settings` method. Check the :class:`~kivy.uix.settings.Settings` about how to create a panel, because you need a JSON file / data first."
msgstr ""

# 539b2e2a2c314320a5d7261bc7bd302b
#: ../../../kivy/app.py:docstring of kivy.app:111
msgid "Let's take as an example the previous snippet of TestApp with custom config. We could create a JSON like this::"
msgstr ""

# 8b3796914daa416ba379952c9bf9a02c
#: ../../../kivy/app.py:docstring of kivy.app:132
msgid "Then, we can create a panel using this JSON to create automatically all the options, and link them to our :data:`App.config` ConfigParser instance::"
msgstr ""

# 580c4c544b284961919749cf19ca6f18
#: ../../../kivy/app.py:docstring of kivy.app:142
msgid "That's all ! Now you can press F1 (default keystroke) for toggle the settings panel, or press the \"settings\" key on your android device. You can manually call :meth:`App.open_settings` and :meth:`App.close_settings` if you want. Every changes in the panel are automatically saved in the config file."
msgstr ""

# 1e4999b975444c899cae535a71ceb01f
#: ../../../kivy/app.py:docstring of kivy.app:147
msgid "However, you might want to know when a config value have been changed by the user, in order to adapt or reload your UI. You can overload the :meth:`on_config_change` method::"
msgstr ""

# 05f83c5e93ed48d48669e26167202269
#: ../../../kivy/app.py:docstring of kivy.app:161
msgid "One last note, the Kivy configuration panel is added by default in the settings instance. If you don't want it, you can declare your Application like this::"
msgstr ""

# 8c75783c64ba498eb8e0cb17667546cf
# 78c80c94b2924bb199edf694fbad4f68
#: ../../<autodoc>:1
msgid "Bases: :class:`kivy.event.EventDispatcher`"
msgstr "Basiert auf: :class:`kivy.event.EventDispatcher`"

# 1bfd41de5e9b4cb58f3e2ccf6b1bcb0f
# f3ff185dcc8340eab6c3589247655c5b
#: ../../../kivy/app.py:docstring of kivy.app.App:1
msgid "Application class, see module documentation for more information."
msgstr ""
"Application Klasse, siehe Modul Dokumentation für weitere Informationen."

# 09dd7de48c254472842481a591529faa
# 80ebf6c63c9343b79adcb310a512c8fb
#: ../../../kivy/app.py:docstring of kivy.app.App:5
msgid "Fired when the application is being started (before the :func:`~kivy.base.runTouchApp` call."
msgstr ""
"Ausgeführt, sobald die Anwendung gestartet wird (vor Aufruf von "
":func:`~kivy.base.runTouchApp)."

# bd6d020617624ecb83f9c887bab505a3
# 613f095b52c54223a9d396daed5d9f0e
#: ../../../kivy/app.py:docstring of kivy.app.App:8
msgid "Fired when the application stops."
msgstr "Ausgeführt, sobald die Anwendung gestoppt wird."

# b8cfa0b2620c476a9dfd08d4b7b06d38
#: ../../../kivy/app.py:docstring of kivy.app.App:12
msgid "If a kv_directory is set, it will be used to get the initial kv file. By default, the file is searched in the same directory as the current App definition file."
msgstr ""

# 4967951a1a894f11b2938d40c29b6afa
# 09fb0b3f25ff49efa06937d298f7f272
#: ../../../kivy/app.py:docstring of kivy.app.App.build:1
msgid "Initializes the application; will be called only once. If this method returns a widget (tree), it will be used as the root widget and added to the window."
msgstr ""
"Initialisiert die Anwendung; wird nur einmal aufgerufen. Wenn diese Funktion "
"ein widget bzw. einen widget tree zurückgibt, wird dieses als root widget "
"verwendet und im Hauptfenster angezeigt."

# cd2d86ee8ddd44dd9af33a10f376e4cb
#: ../../../kivy/app.py:docstring of kivy.app.App.build_config:3
msgid "This method is called before the application is initialized to construct your :class:`~kivy.config.ConfigParser` object. This is where you can put any default section / key / value for your config. If anything is set, the configuration will be automatically saved in the file returned by :meth:`get_application_config`."
msgstr ""

# ee203317a6444307aca0e73677d7947b
#: ../../../kivy/app.py:docstring of kivy.app.App.build_settings:3
msgid "This method is called when the user (or you) want to show the application settings. This will be called only once, the first time when the user will show the settings."
msgstr ""

# b85c9fa57f0a4fed87a25636528ba79b
#: ../../../kivy/app.py:docstring of kivy.app.App.close_settings:1
msgid "Close the previously opened settings panel."
msgstr ""

# 2b47f3d615354f65ad60f610ee862998
#: ../../../kivy/app.py:docstring of kivy.app.App.config:1
msgid "Instance to the :class:`~kivy.config.ConfigParser` of the application configuration. Can be used to query some config token in the build()"
msgstr ""

# e2dfc18dec314719b27ed364f0b417b5
#: ../../../kivy/app.py:docstring of kivy.app.App.directory:3
msgid "Return the directory where the application live"
msgstr ""

# d1fbca068a17467694e75189f1a50ac8
#: ../../../kivy/app.py:docstring of kivy.app.App.get_application_config:3
msgid "Return the filename of your application configuration"
msgstr ""

# cc5835128e804e52902de15c877cc722
#: ../../../kivy/app.py:docstring of kivy.app.App.get_application_icon:1
msgid "Return the icon of the application."
msgstr ""

# 30212d30fd0d4b3087d6e88221595688
#: ../../../kivy/app.py:docstring of kivy.app.App.get_application_name:1
msgid "Return the name of the application."
msgstr ""

# 79609c61e64e4083946a78482a90f535
#: ../../../kivy/app.py:docstring of kivy.app.App.icon:3
msgid "Icon of your application. You can set by doing::"
msgstr ""

# 17f4775eb0ac427ba70293845e780b0a
#: ../../../kivy/app.py:docstring of kivy.app.App.icon:8
msgid "The icon can be located in the same directory as your main file."
msgstr ""

# e070b36ad0224637840b2da4811a970a
#: ../../../kivy/app.py:docstring of kivy.app.App.load_config:1
msgid "(internal) This function is used for returning a ConfigParser with the application configuration. It's doing 3 things:"
msgstr ""

# ce6655746d5f445a99d4b945e83bea12
#: ../../../kivy/app.py:docstring of kivy.app.App.load_config:4
msgid "Create an instance of a ConfigParser"
msgstr ""

# a407cf2800b64d0cbde4f1dd392c46ee
#: ../../../kivy/app.py:docstring of kivy.app.App.load_config:5
msgid "Load the default configuration by calling :meth:`build_config`, then"
msgstr ""

# df451ef756ab4948846e9134ba109e32
#: ../../../kivy/app.py:docstring of kivy.app.App.load_config:7
msgid "If exist, load the application configuration file, or create it if it's not existing."
msgstr ""

# 16e43f13320649b7b48d8a76ef8912ce
# 7a51fe8335fd4e92baafe10c70ea0883
#: ../../../kivy/app.py:docstring of kivy.app.App.load_kv:1
msgid "This method is invoked the first time the app is being run if no widget tree has been constructed before for this app. This method then looks for a matching kv file in the same directory as the file that contains the application class."
msgstr ""
"Diese Methode wird beim ersten Start des Programm aufgerufen, wenn zuvor "
"noch kein widget tree für das Programm erstellt wurde. Diese Methode sucht "
"dann nach einer .kv Datei im selben Verzeichnis wie die Datei mit der app "
"Klasse."

# 58facc9b6379438d901297c0b9f8ac58
# 68e9fde989804ef19477e67fdf0678a2
#: ../../../kivy/app.py:docstring of kivy.app.App.load_kv:6
msgid "For example, if you have a file named main.py that contains::"
msgstr ""
"Wenn man z.B. eine Datei mit dem Namen main.py hat, die folgendes enthält::"

# 6cd1335e6a6e4b72aa155ee4a5f35e9d
# 13a4c60da32b4e2dad7d75426994ffaa
#: ../../../kivy/app.py:docstring of kivy.app.App.load_kv:11
msgid "This method will search for a file named `showcase.kv` in the directory that contains main.py. The name of the kv file has to be the lowercase name of the class, without the 'App' postfix at the end if it exists."
msgstr ""
"Diese Methode wird nach einer Datei namens `showcase.kv` suchen, die sich im "
"selben Verzeichnis wie die main.py Datei befindet. Der Name der .kv Datei "
"muss der Name der Klasse in Kleinbuchstaben und ohne die Endung 'App' sein."

# dc5da63ac06b46e0bccf7c6a1cd046c6
# 7a717bdcd4e545d7b87dd94ea658583a
#: ../../../kivy/app.py:docstring of kivy.app.App.load_kv:16
msgid "You can define rules and a root widget in your kv file::"
msgstr ""
"Man kann Regeln und root widget Definitionen in der .kv Datei festlegen::"

# dd2c14d8e47d4229a906c947cc0fafd8
# 6a59918789f44f08ad00962976653c67
#: ../../../kivy/app.py:docstring of kivy.app.App.load_kv:24
msgid "There must be only one root widget. See the :doc:`api-kivy.lang` documentation for more information on how to create kv files. If your kv file contains a root widget, it will be used as self.root, the root widget for the application."
msgstr ""
"Es darf nur ein root widget geben. Siehe die :doc:`api-kivy.lang` "
"Dokumentation für weitere Informationen zum Erstellen von kv Dateien. Sollte "
"die kv Datei ein root widget enthalten, wird es als self.root, dem root "
"widget der Anwendung genutzt."

# 7557db4bc7fd4542b7d411642db9146d
#: ../../../kivy/app.py:docstring of kivy.app.App.name:3
msgid "Return the name of the application, based on the class name"
msgstr ""

# d3ba87a02708458bbfaddec454912493
#: ../../../kivy/app.py:docstring of kivy.app.App.on_config_change:1
msgid "Event handler fired when one configuration token have been changed by the settings page."
msgstr ""

# 47b843ba5669430fb625665432055384
# ea08b7c045cf42fe80bc43c5ac2d4019
#: ../../../kivy/app.py:docstring of kivy.app.App.on_start:1
msgid "Event handler for the on_start event, which is fired after initialization (after build() has been called), and before the application is being run."
msgstr ""
"Eventhandler für das on_start Ereignis, welches nach der Initialisierung des "
"Programms aufgerufen wird (nachdem build() aufgerufen wurde)."

# df4e8ac01f754bf4ad55e7faa76bc8d3
# 7f2d41a4af4a4662aa0c61508420e169
#: ../../../kivy/app.py:docstring of kivy.app.App.on_stop:1
msgid "Event handler for the on_stop event, which is fired when the application has finished running (e.g. the window is about to be closed)."
msgstr ""
"Eventhandler dür das on_stop Ereignis, welches aufgerufen wird, nachdem die "
"Anwendung gestoppt wurde (z.B. wenn das Hauptfenster geschlossen werden "
"soll)"

# 9434eb268bcc4182a41a2262f1e08fd9
#: ../../../kivy/app.py:docstring of kivy.app.App.open_settings:1
msgid "Open the application settings panel. It will be created the very first time. Then the settings panel will be added to the Window attached to your application (automatically done by :meth:`run`)"
msgstr ""

# ef72ea2cf4c64ddb889f3d7ea6f08832
#: ../../../kivy/app.py:docstring of kivy.app.App.options:1
msgid "Options passed to the __init__ of the App"
msgstr ""

# 127e4ff0a221443aa5b56c66a0f76a7c
# 2de52bb72e544c93a29d5881cfa99ac0
#: ../../../kivy/app.py:docstring of kivy.app.App.root:1
msgid "Root widget set by the :func:`build` method or by the :func:`load_kv` method if the kv file contains a root widget."
msgstr ""
"Root widget, dass durch die :func:`build` Methode oder, wenn die kv Datei "
"ein root widget enthält, durch die :func:`load_kv` Methode festgelegt wurde."

# 4979f3b0203b44c0a5203414187c30d2
# 58aedc44afaa4f57a55c8f433c223293
#: ../../../kivy/app.py:docstring of kivy.app.App.run:1
msgid "Launches the app in standalone mode."
msgstr "Startet das Propgramm als eigenständige Anwendung."

# 6a62fd98027a41649ef06e7d53fef73b
# 83f44022bafb4532a121f21f1d6711aa
#: ../../../kivy/app.py:docstring of kivy.app.App.stop:1
msgid "Stop the application."
msgstr "Stoppt das Programm."

# b71333f4eec2488bbad452ca3c3ea21a
# f95615922a3441ad86004f352ca969d5
#: ../../../kivy/app.py:docstring of kivy.app.App.stop:3
msgid "If you use this method, the whole application will stop by issuing a call to :func:`~kivy.base.stopTouchApp`."
msgstr ""
"Wird diese Methode genutzt, wird das gesamte Programm durch einen Aufruf von "
":func:`~kivy.base.stopTouchApp` gestoppt."

# 7c332e576b5a4fc0bb3a7ef4e20b5612
#: ../../../kivy/app.py:docstring of kivy.app.App.title:3
msgid "Title of your application. You can set by doing::"
msgstr ""

# d6b735ed765541b5aa01365b7b0d4432
#: ../../../kivy/app.py:docstring of kivy.app.App.use_kivy_settings:3
msgid "If True, the application settings will include also the Kivy settings. If you don't want the user to change any kivy settings from your settings UI, change this to False."
msgstr ""

# 4a09e801195d43a9875d3928d185318d
#~ msgid "Creating an Application by Overriding build()"
#~ msgstr "Erstellen einer Anwendung durch Überschreiben der build() Funktion"

# 08c4e5ae3ad740bca9570cd15010e16d
#~ msgid "Creating an Application via kv File"
#~ msgstr "Erzeugen einer Anwendung mittels kv Datei"
